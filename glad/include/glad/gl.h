/**
 * Loader generated by glad 2.0.0-beta on Mon Apr 12 22:26:58 2021
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 0
 *
 * APIs:
 *  - glsc2=2.0
 *  - gl:compatibility=3.3
 *  - gles2=3.2
 *  - gles1:common=1.0
 *
 * Options:
 *  - MX_GLOBAL = True
 *  - ON_DEMAND = False
 *  - LOADER = True
 *  - ALIAS = False
 *  - HEADER_ONLY = False
 *  - DEBUG = False
 *  - MX = True
 *
 * Commandline:
 *    --merge --api='glsc2=2.0,gl:compatibility=3.3,gles2=3.2,gles1:common=1.0' --extensions='' c --mx-global --loader --mx
 *
 * Online:
 *    http://glad.sh/#api=glsc2%3D2.0%2Cgl%3Acompatibility%3D3.3%2Cgles2%3D3.2%2Cgles1%3Acommon%3D1.0&extensions=&generator=c&options=MERGE%2CMX_GLOBAL%2CLOADER%2CMX
 *
 */

#ifndef GLAD_GL_H_
#define GLAD_GL_H_

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
  #error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
  #error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
  #error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
  #error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __gl2_h_
  #error OpenGL ES 2 header already included (API: gles2), remove previous include!
#endif
#define __gl2_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define GLAD_GL
#define GLAD_OPTION_GL_MX_GLOBAL
#define GLAD_OPTION_GL_LOADER
#define GLAD_OPTION_GL_MX

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GLAD_PLATFORM_H_
#define GLAD_PLATFORM_H_

#ifndef GLAD_PLATFORM_WIN32
  #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
    #define GLAD_PLATFORM_WIN32 1
  #else
    #define GLAD_PLATFORM_WIN32 0
  #endif
#endif

#ifndef GLAD_PLATFORM_APPLE
  #ifdef __APPLE__
    #define GLAD_PLATFORM_APPLE 1
  #else
    #define GLAD_PLATFORM_APPLE 0
  #endif
#endif

#ifndef GLAD_PLATFORM_EMSCRIPTEN
  #ifdef __EMSCRIPTEN__
    #define GLAD_PLATFORM_EMSCRIPTEN 1
  #else
    #define GLAD_PLATFORM_EMSCRIPTEN 0
  #endif
#endif

#ifndef GLAD_PLATFORM_UWP
  #if defined(_MSC_VER) && !defined(GLAD_INTERNAL_HAVE_WINAPIFAMILY)
    #ifdef __has_include
      #if __has_include(<winapifamily.h>)
        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
      #endif
    #elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
      #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
    #endif
  #endif

  #ifdef GLAD_INTERNAL_HAVE_WINAPIFAMILY
    #include <winapifamily.h>
    #if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
      #define GLAD_PLATFORM_UWP 1
    #endif
  #endif

  #ifndef GLAD_PLATFORM_UWP
    #define GLAD_PLATFORM_UWP 0
  #endif
#endif

#ifdef __GNUC__
  #define GLAD_GNUC_EXTENSION __extension__
#else
  #define GLAD_GNUC_EXTENSION
#endif

#ifndef GLAD_API_CALL
  #if defined(GLAD_API_CALL_EXPORT)
    #if GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
      #if defined(GLAD_API_CALL_EXPORT_BUILD)
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllexport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllexport) extern
        #endif
      #else
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllimport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllimport) extern
        #endif
      #endif
    #elif defined(__GNUC__) && defined(GLAD_API_CALL_EXPORT_BUILD)
      #define GLAD_API_CALL __attribute__ ((visibility ("default"))) extern
    #else
      #define GLAD_API_CALL extern
    #endif
  #else
    #define GLAD_API_CALL extern
  #endif
#endif

#ifdef APIENTRY
  #define GLAD_API_PTR APIENTRY
#elif GLAD_PLATFORM_WIN32
  #define GLAD_API_PTR __stdcall
#else
  #define GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY GLAD_API_PTR
#endif

#define GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define GLAD_VERSION_MAJOR(version) (version / 10000)
#define GLAD_VERSION_MINOR(version) (version % 10000)

#define GLAD_GENERATOR_VERSION "2.0.0-beta"

typedef void (*GLADapiproc)(void);

typedef GLADapiproc (*GLADloadfunc)(const char *name);
typedef GLADapiproc (*GLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);
typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args, ...);

#endif /* GLAD_PLATFORM_H_ */

#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALPHA_BITS 0x0D55
#define GL_ALWAYS 0x0207
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_BACK 0x0405
#define GL_BLEND 0x0BE2
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLUE_BITS 0x0D54
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_BYTE 0x1400
#define GL_CCW 0x0901
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CW 0x0900
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_BITS 0x0D56
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DITHER 0x0BD0
#define GL_DONT_CARE 0x1100
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_EQUAL 0x0202
#define GL_EXTENSIONS 0x1F03
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FLOAT 0x1406
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GEQUAL 0x0206
#define GL_GREATER 0x0204
#define GL_GREEN_BITS 0x0D53
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INT 0x1404
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_KEEP 0x1E00
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LINEAR 0x2601
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_LINE_WIDTH 0x0B21
#define GL_LINK_STATUS 0x8B82
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MIRRORED_REPEAT 0x8370
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_ONE 1
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_POINTS 0x0000
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_R8 0x8229
#define GL_RED 0x1903
#define GL_RED_BITS 0x0D52
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERER 0x1F01
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RG 0x8227
#define GL_RG8 0x822B
#define GL_RGB 0x1907
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGBA 0x1908
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHORT 0x1402
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_STATIC_DRAW 0x88E4
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BITS 0x0D57
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STREAM_DRAW 0x88E0
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRUE 1
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VIEWPORT 0x0BA2
#define GL_ZERO 0
#define GL_2D 0x0600
#define GL_2_BYTES 0x1407
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_3_BYTES 0x1408
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_4_BYTES 0x1409
#define GL_ACCUM 0x0100
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ADD 0x0104
#define GL_ADD_SIGNED 0x8574
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_ALPHA 0x1906
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_ALPHA_INTEGER 0x8D97
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_ALREADY_SIGNALED 0x911A
#define GL_AMBIENT 0x1200
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_AUTO_NORMAL 0x0D80
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_AUX_BUFFERS 0x0C00
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGR_INTEGER 0x8D9A
#define GL_BITMAP 0x1A00
#define GL_BITMAP_TOKEN 0x0704
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLUE 0x1905
#define GL_BLUE_BIAS 0x0D1B
#define GL_BLUE_INTEGER 0x8D96
#define GL_BLUE_SCALE 0x0D1A
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_C3F_V3F 0x2A24
#define GL_C4F_N3F_V3F 0x2A26
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_CLAMP 0x2900
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLEAR 0x1500
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_COEFF 0x0A00
#define GL_COLOR 0x1800
#define GL_COLOR_ARRAY 0x8076
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_INDEX 0x1900
#define GL_COLOR_INDEXES 0x1603
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_MATERIAL 0x0B57
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_SUM 0x8458
#define GL_COMBINE 0x8570
#define GL_COMBINE_ALPHA 0x8572
#define GL_COMBINE_RGB 0x8571
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONSTANT 0x8576
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_COORD_REPLACE 0x8862
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_CURRENT_BIT 0x00000001
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_DECAL 0x2101
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_BIAS 0x0D1F
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_DIFFUSE 0x1201
#define GL_DOMAIN 0x0A02
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_READ 0x88E9
#define GL_EDGE_FLAG 0x0B43
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_EMISSION 0x1600
#define GL_ENABLE_BIT 0x00002000
#define GL_EQUIV 0x1509
#define GL_EVAL_BIT 0x00010000
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_EYE_LINEAR 0x2400
#define GL_EYE_PLANE 0x2502
#define GL_FEEDBACK 0x1C01
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_FILL 0x1B02
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIXED_ONLY 0x891D
#define GL_FLAT 0x1D00
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FOG 0x0B60
#define GL_FOG_BIT 0x00000080
#define GL_FOG_COLOR 0x0B66
#define GL_FOG_COORD 0x8451
#define GL_FOG_COORDINATE 0x8451
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_END 0x0B64
#define GL_FOG_HINT 0x0C54
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_MODE 0x0B65
#define GL_FOG_START 0x0B63
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GREEN 0x1904
#define GL_GREEN_BIAS 0x0D19
#define GL_GREEN_INTEGER 0x8D95
#define GL_GREEN_SCALE 0x0D18
#define GL_HALF_FLOAT 0x140B
#define GL_HINT_BIT 0x00008000
#define GL_INDEX 0x8222
#define GL_INDEX_ARRAY 0x8077
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_BITS 0x0D51
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_INDEX_MODE 0x0C30
#define GL_INDEX_OFFSET 0x0D13
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INTENSITY 0x8049
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERPOLATE 0x8575
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LEFT 0x0406
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_LIGHTING 0x0B50
#define GL_LIGHTING_BIT 0x00000040
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LINE 0x1B01
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_BIT 0x00000004
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_TOKEN 0x0702
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LIST_BASE 0x0B32
#define GL_LIST_BIT 0x00020000
#define GL_LIST_INDEX 0x0B33
#define GL_LIST_MODE 0x0B30
#define GL_LOAD 0x0101
#define GL_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOWER_LEFT 0x8CA1
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_MAJOR_VERSION 0x821B
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_STENCIL 0x0D11
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATRIX_MODE 0x0BA0
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MIN 0x8007
#define GL_MINOR_VERSION 0x821C
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MODELVIEW 0x1700
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_MODULATE 0x2100
#define GL_MULT 0x0103
#define GL_MULTISAMPLE 0x809D
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_N3F_V3F 0x2A25
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_NAND 0x150E
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NORMALIZE 0x0BA1
#define GL_NORMAL_ARRAY 0x8075
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_MAP 0x8511
#define GL_NUM_EXTENSIONS 0x821D
#define GL_OBJECT_LINEAR 0x2401
#define GL_OBJECT_PLANE 0x2501
#define GL_OBJECT_TYPE 0x9112
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_ALPHA 0x859A
#define GL_OPERAND2_RGB 0x8592
#define GL_OR 0x1507
#define GL_ORDER 0x0A01
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_POINT 0x1B00
#define GL_POINT_BIT 0x00000002
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_POINT_SPRITE 0x8861
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POINT_TOKEN 0x0701
#define GL_POLYGON 0x0009
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_POLYGON_TOKEN 0x0703
#define GL_POSITION 0x1203
#define GL_PREVIOUS 0x8578
#define GL_PRIMARY_COLOR 0x8577
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROJECTION 0x1701
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_Q 0x2003
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUAD_STRIP 0x0008
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_WAIT 0x8E13
#define GL_R 0x2002
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_ONLY 0x88B8
#define GL_READ_WRITE 0x88BA
#define GL_RED_BIAS 0x0D15
#define GL_RED_INTEGER 0x8D94
#define GL_RED_SCALE 0x0D14
#define GL_REFLECTION_MAP 0x8512
#define GL_RENDER 0x1C00
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDER_MODE 0x0C40
#define GL_RESCALE_NORMAL 0x803A
#define GL_RETURN 0x0102
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGBA_MODE 0x0C31
#define GL_RGB_INTEGER 0x8D98
#define GL_RGB_SCALE 0x8573
#define GL_RG_INTEGER 0x8228
#define GL_RIGHT 0x0407
#define GL_S 0x2000
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SCISSOR_BIT 0x00080000
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SELECT 0x1C02
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_SET 0x150F
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADE_MODEL 0x0B54
#define GL_SHININESS 0x1601
#define GL_SIGNALED 0x9119
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SINGLE_COLOR 0x81F9
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SMOOTH 0x1D01
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_ALPHA 0x858A
#define GL_SOURCE2_RGB 0x8582
#define GL_SPECULAR 0x1202
#define GL_SPHERE_MAP 0x2402
#define GL_SPOT_CUTOFF 0x1206
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_ALPHA 0x858A
#define GL_SRC2_RGB 0x8582
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB_ALPHA 0x8C42
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_READ 0x88E5
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STEREO 0x0C33
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_READ 0x88E1
#define GL_SUBTRACT 0x84E7
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_T 0x2001
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_V3F 0x2A27
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_T4F_V4F 0x2A28
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BIT 0x00040000
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_ENV 0x2300
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TRANSFORM_BIT 0x00001000
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UPPER_LEFT 0x8CA2
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_VERTEX_SHADER 0x8B31
#define GL_VIEWPORT_BIT 0x00000800
#define GL_WAIT_FAILED 0x911D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_WRITE_ONLY 0x88B9
#define GL_XOR 0x1506
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_BLOCK_INDEX 0x92FD
#define GL_BUFFER 0x82E0
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_COLORBURN 0x929A
#define GL_COLORDODGE 0x9299
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_ASTC_10x10 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x5 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_12x10 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_4x4 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8 0x93B7
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_DARKEN 0x9297
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DIFFERENCE 0x929E
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_EXCLUSION 0x92A0
#define GL_FIXED 0x140C
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_HARDLIGHT 0x929B
#define GL_HSL_COLOR 0x92AF
#define GL_HSL_HUE 0x92AD
#define GL_HSL_LUMINOSITY 0x92B0
#define GL_HSL_SATURATION 0x92AE
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LIGHTEN 0x9298
#define GL_LOCATION 0x930E
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MULTIPLY 0x9294
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE 0x9381
#define GL_NAME_LENGTH 0x92F9
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_OFFSET 0x92FC
#define GL_OVERLAY 0x9296
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PRIMITIVE_BOUNDING_BOX 0x92BE
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_QUERY 0x82E3
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SCREEN 0x9295
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SOFTLIGHT 0x929C
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TYPE 0x92FA
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERSION_ES_CL_1_0 1
#define GL_VERSION_ES_CL_1_1 1
#define GL_VERSION_ES_CM_1_1 1


#include <KHR/khrplatform.h>

typedef unsigned int GLenum;

typedef unsigned char GLboolean;

typedef unsigned int GLbitfield;

typedef void GLvoid;

typedef khronos_int8_t GLbyte;

typedef khronos_uint8_t GLubyte;

typedef khronos_int16_t GLshort;

typedef khronos_uint16_t GLushort;

typedef int GLint;

typedef unsigned int GLuint;

typedef khronos_int32_t GLclampx;

typedef int GLsizei;

typedef khronos_float_t GLfloat;

typedef khronos_float_t GLclampf;

typedef double GLdouble;

typedef double GLclampd;

typedef void *GLeglClientBufferEXT;

typedef void *GLeglImageOES;

typedef char GLchar;

typedef char GLcharARB;

#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif

typedef khronos_uint16_t GLhalf;

typedef khronos_uint16_t GLhalfARB;

typedef khronos_int32_t GLfixed;

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif

typedef khronos_int64_t GLint64;

typedef khronos_int64_t GLint64EXT;

typedef khronos_uint64_t GLuint64;

typedef khronos_uint64_t GLuint64EXT;

typedef struct __GLsync *GLsync;

struct _cl_context;

struct _cl_event;

typedef void (GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);

typedef unsigned short GLhalfNV;

typedef GLintptr GLvdpauSurfaceNV;

typedef void (GLAD_API_PTR *GLVULKANPROCNV)(void);



#define GL_SC_VERSION_2_0 1
#define GL_VERSION_1_0 1
#define GL_VERSION_1_1 1
#define GL_VERSION_1_2 1
#define GL_VERSION_1_3 1
#define GL_VERSION_1_4 1
#define GL_VERSION_1_5 1
#define GL_VERSION_2_0 1
#define GL_VERSION_2_1 1
#define GL_VERSION_3_0 1
#define GL_VERSION_3_1 1
#define GL_VERSION_3_2 1
#define GL_VERSION_3_3 1
#define GL_ES_VERSION_2_0 1
#define GL_ES_VERSION_3_0 1
#define GL_ES_VERSION_3_1 1
#define GL_ES_VERSION_3_2 1
#define GL_VERSION_ES_CM_1_0 1


typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLACCUMPROC)(GLenum op, GLfloat value);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTPROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLBEGINPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLCALLLISTPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void * lists);
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void (GLAD_API_PTR *PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (GLAD_API_PTR *PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGVPROC)(const GLboolean * flag);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENDPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDLISTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
typedef void (GLAD_API_PTR *PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT1PROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT2PROC)(GLint i, GLint j);
typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat * buffer);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDPROC)(GLdouble coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDVPROC)(const GLdouble * coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFPROC)(GLfloat coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFVPROC)(const GLfloat * coord);
typedef void (GLAD_API_PTR *PFNGLFOGFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFOGFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFOGIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFOGIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef GLuint (GLAD_API_PTR *PFNGLGENLISTSPROC)(GLsizei range);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void * img);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint * v);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort * values);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte * mask);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLINDEXDPROC)(GLdouble c);
typedef void (GLAD_API_PTR *PFNGLINDEXDVPROC)(const GLdouble * c);
typedef void (GLAD_API_PTR *PFNGLINDEXFPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLINDEXFVPROC)(const GLfloat * c);
typedef void (GLAD_API_PTR *PFNGLINDEXIPROC)(GLint c);
typedef void (GLAD_API_PTR *PFNGLINDEXIVPROC)(const GLint * c);
typedef void (GLAD_API_PTR *PFNGLINDEXSPROC)(GLshort c);
typedef void (GLAD_API_PTR *PFNGLINDEXSVPROC)(const GLshort * c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBPROC)(GLubyte c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBVPROC)(const GLubyte * c);
typedef void (GLAD_API_PTR *PFNGLINITNAMESPROC)(void);
typedef void (GLAD_API_PTR *PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void * pointer);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISLISTPROC)(GLuint list);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLLISTBASEPROC)(GLuint base);
typedef void (GLAD_API_PTR *PFNGLLOADIDENTITYPROC)(void);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOADNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (GLAD_API_PTR *PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort * values);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPOLYGONSTIPPLEPROC)(const GLubyte * mask);
typedef void (GLAD_API_PTR *PFNGLPOPATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPNAMEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (GLAD_API_PTR *PFNGLRECTDVPROC)(const GLdouble * v1, const GLdouble * v2);
typedef void (GLAD_API_PTR *PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (GLAD_API_PTR *PFNGLRECTFVPROC)(const GLfloat * v1, const GLfloat * v2);
typedef void (GLAD_API_PTR *PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (GLAD_API_PTR *PFNGLRECTIVPROC)(const GLint * v1, const GLint * v2);
typedef void (GLAD_API_PTR *PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (GLAD_API_PTR *PFNGLRECTSVPROC)(const GLshort * v1, const GLshort * v2);
typedef GLint (GLAD_API_PTR *PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint * buffer);
typedef void (GLAD_API_PTR *PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAD_API_PTR *PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef GLuint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCXPROC)(GLenum func, GLfixed ref);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORXPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHXPROC)(GLfixed depth);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEFPROC)(GLenum p, const GLfloat * eqn);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEXPROC)(GLenum plane, const GLfixed * equation);
typedef void (GLAD_API_PTR *PFNGLCOLOR4XPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEXPROC)(GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLFOGXPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLFOGXVPROC)(GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMFPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMXPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEFPROC)(GLenum plane, GLfloat * equation);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEXPROC)(GLenum plane, GLfixed * equation);
typedef void (GLAD_API_PTR *PFNGLGETFIXEDVPROC)(GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTXVPROC)(GLenum light, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALXVPROC)(GLenum face, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVXVPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERXVPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXVPROC)(GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLLIGHTXPROC)(GLenum light, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLLIGHTXVPROC)(GLenum light, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHXPROC)(GLfixed width);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXXPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMATERIALXPROC)(GLenum face, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLMATERIALXVPROC)(GLenum face, GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXXPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4XPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (GLAD_API_PTR *PFNGLNORMAL3XPROC)(GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (GLAD_API_PTR *PFNGLORTHOFPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLORTHOXPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERXPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERXVPROC)(GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEXPROC)(GLfixed size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETXPROC)(GLfixed factor, GLfixed units);
typedef void (GLAD_API_PTR *PFNGLROTATEXPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEXPROC)(GLclampx value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSCALEXPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLTEXENVXPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLTEXENVXVPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXVPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEXPROC)(GLfixed x, GLfixed y, GLfixed z);

typedef struct GladGLContext {
    void* userptr;

    int SC_VERSION_2_0;
    int VERSION_1_0;
    int VERSION_1_1;
    int VERSION_1_2;
    int VERSION_1_3;
    int VERSION_1_4;
    int VERSION_1_5;
    int VERSION_2_0;
    int VERSION_2_1;
    int VERSION_3_0;
    int VERSION_3_1;
    int VERSION_3_2;
    int VERSION_3_3;
    int ES_VERSION_2_0;
    int ES_VERSION_3_0;
    int ES_VERSION_3_1;
    int ES_VERSION_3_2;
    int VERSION_ES_CM_1_0;

    PFNGLACTIVETEXTUREPROC ActiveTexture;
    PFNGLBINDBUFFERPROC BindBuffer;
    PFNGLBINDFRAMEBUFFERPROC BindFramebuffer;
    PFNGLBINDRENDERBUFFERPROC BindRenderbuffer;
    PFNGLBINDTEXTUREPROC BindTexture;
    PFNGLBLENDCOLORPROC BlendColor;
    PFNGLBLENDEQUATIONPROC BlendEquation;
    PFNGLBLENDEQUATIONSEPARATEPROC BlendEquationSeparate;
    PFNGLBLENDFUNCPROC BlendFunc;
    PFNGLBLENDFUNCSEPARATEPROC BlendFuncSeparate;
    PFNGLBUFFERDATAPROC BufferData;
    PFNGLBUFFERSUBDATAPROC BufferSubData;
    PFNGLCHECKFRAMEBUFFERSTATUSPROC CheckFramebufferStatus;
    PFNGLCLEARPROC Clear;
    PFNGLCLEARCOLORPROC ClearColor;
    PFNGLCLEARDEPTHFPROC ClearDepthf;
    PFNGLCLEARSTENCILPROC ClearStencil;
    PFNGLCOLORMASKPROC ColorMask;
    PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC CompressedTexSubImage2D;
    PFNGLCREATEPROGRAMPROC CreateProgram;
    PFNGLCULLFACEPROC CullFace;
    PFNGLDEPTHFUNCPROC DepthFunc;
    PFNGLDEPTHMASKPROC DepthMask;
    PFNGLDEPTHRANGEFPROC DepthRangef;
    PFNGLDISABLEPROC Disable;
    PFNGLDISABLEVERTEXATTRIBARRAYPROC DisableVertexAttribArray;
    PFNGLDRAWARRAYSPROC DrawArrays;
    PFNGLDRAWRANGEELEMENTSPROC DrawRangeElements;
    PFNGLENABLEPROC Enable;
    PFNGLENABLEVERTEXATTRIBARRAYPROC EnableVertexAttribArray;
    PFNGLFINISHPROC Finish;
    PFNGLFLUSHPROC Flush;
    PFNGLFRAMEBUFFERRENDERBUFFERPROC FramebufferRenderbuffer;
    PFNGLFRAMEBUFFERTEXTURE2DPROC FramebufferTexture2D;
    PFNGLFRONTFACEPROC FrontFace;
    PFNGLGENBUFFERSPROC GenBuffers;
    PFNGLGENFRAMEBUFFERSPROC GenFramebuffers;
    PFNGLGENRENDERBUFFERSPROC GenRenderbuffers;
    PFNGLGENTEXTURESPROC GenTextures;
    PFNGLGENERATEMIPMAPPROC GenerateMipmap;
    PFNGLGETATTRIBLOCATIONPROC GetAttribLocation;
    PFNGLGETBOOLEANVPROC GetBooleanv;
    PFNGLGETBUFFERPARAMETERIVPROC GetBufferParameteriv;
    PFNGLGETERRORPROC GetError;
    PFNGLGETFLOATVPROC GetFloatv;
    PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC GetFramebufferAttachmentParameteriv;
    PFNGLGETGRAPHICSRESETSTATUSPROC GetGraphicsResetStatus;
    PFNGLGETINTEGERVPROC GetIntegerv;
    PFNGLGETPROGRAMIVPROC GetProgramiv;
    PFNGLGETRENDERBUFFERPARAMETERIVPROC GetRenderbufferParameteriv;
    PFNGLGETSTRINGPROC GetString;
    PFNGLGETTEXPARAMETERFVPROC GetTexParameterfv;
    PFNGLGETTEXPARAMETERIVPROC GetTexParameteriv;
    PFNGLGETUNIFORMLOCATIONPROC GetUniformLocation;
    PFNGLGETVERTEXATTRIBPOINTERVPROC GetVertexAttribPointerv;
    PFNGLGETVERTEXATTRIBFVPROC GetVertexAttribfv;
    PFNGLGETVERTEXATTRIBIVPROC GetVertexAttribiv;
    PFNGLGETNUNIFORMFVPROC GetnUniformfv;
    PFNGLGETNUNIFORMIVPROC GetnUniformiv;
    PFNGLHINTPROC Hint;
    PFNGLISENABLEDPROC IsEnabled;
    PFNGLLINEWIDTHPROC LineWidth;
    PFNGLPIXELSTOREIPROC PixelStorei;
    PFNGLPOLYGONOFFSETPROC PolygonOffset;
    PFNGLPROGRAMBINARYPROC ProgramBinary;
    PFNGLREADNPIXELSPROC ReadnPixels;
    PFNGLRENDERBUFFERSTORAGEPROC RenderbufferStorage;
    PFNGLSAMPLECOVERAGEPROC SampleCoverage;
    PFNGLSCISSORPROC Scissor;
    PFNGLSTENCILFUNCPROC StencilFunc;
    PFNGLSTENCILFUNCSEPARATEPROC StencilFuncSeparate;
    PFNGLSTENCILMASKPROC StencilMask;
    PFNGLSTENCILMASKSEPARATEPROC StencilMaskSeparate;
    PFNGLSTENCILOPPROC StencilOp;
    PFNGLSTENCILOPSEPARATEPROC StencilOpSeparate;
    PFNGLTEXPARAMETERFPROC TexParameterf;
    PFNGLTEXPARAMETERFVPROC TexParameterfv;
    PFNGLTEXPARAMETERIPROC TexParameteri;
    PFNGLTEXPARAMETERIVPROC TexParameteriv;
    PFNGLTEXSTORAGE2DPROC TexStorage2D;
    PFNGLTEXSUBIMAGE2DPROC TexSubImage2D;
    PFNGLUNIFORM1FPROC Uniform1f;
    PFNGLUNIFORM1FVPROC Uniform1fv;
    PFNGLUNIFORM1IPROC Uniform1i;
    PFNGLUNIFORM1IVPROC Uniform1iv;
    PFNGLUNIFORM2FPROC Uniform2f;
    PFNGLUNIFORM2FVPROC Uniform2fv;
    PFNGLUNIFORM2IPROC Uniform2i;
    PFNGLUNIFORM2IVPROC Uniform2iv;
    PFNGLUNIFORM3FPROC Uniform3f;
    PFNGLUNIFORM3FVPROC Uniform3fv;
    PFNGLUNIFORM3IPROC Uniform3i;
    PFNGLUNIFORM3IVPROC Uniform3iv;
    PFNGLUNIFORM4FPROC Uniform4f;
    PFNGLUNIFORM4FVPROC Uniform4fv;
    PFNGLUNIFORM4IPROC Uniform4i;
    PFNGLUNIFORM4IVPROC Uniform4iv;
    PFNGLUNIFORMMATRIX2FVPROC UniformMatrix2fv;
    PFNGLUNIFORMMATRIX3FVPROC UniformMatrix3fv;
    PFNGLUNIFORMMATRIX4FVPROC UniformMatrix4fv;
    PFNGLUSEPROGRAMPROC UseProgram;
    PFNGLVERTEXATTRIB1FPROC VertexAttrib1f;
    PFNGLVERTEXATTRIB1FVPROC VertexAttrib1fv;
    PFNGLVERTEXATTRIB2FPROC VertexAttrib2f;
    PFNGLVERTEXATTRIB2FVPROC VertexAttrib2fv;
    PFNGLVERTEXATTRIB3FPROC VertexAttrib3f;
    PFNGLVERTEXATTRIB3FVPROC VertexAttrib3fv;
    PFNGLVERTEXATTRIB4FPROC VertexAttrib4f;
    PFNGLVERTEXATTRIB4FVPROC VertexAttrib4fv;
    PFNGLVERTEXATTRIBPOINTERPROC VertexAttribPointer;
    PFNGLVIEWPORTPROC Viewport;
    PFNGLACCUMPROC Accum;
    PFNGLALPHAFUNCPROC AlphaFunc;
    PFNGLARETEXTURESRESIDENTPROC AreTexturesResident;
    PFNGLARRAYELEMENTPROC ArrayElement;
    PFNGLATTACHSHADERPROC AttachShader;
    PFNGLBEGINPROC Begin;
    PFNGLBEGINCONDITIONALRENDERPROC BeginConditionalRender;
    PFNGLBEGINQUERYPROC BeginQuery;
    PFNGLBEGINTRANSFORMFEEDBACKPROC BeginTransformFeedback;
    PFNGLBINDATTRIBLOCATIONPROC BindAttribLocation;
    PFNGLBINDBUFFERBASEPROC BindBufferBase;
    PFNGLBINDBUFFERRANGEPROC BindBufferRange;
    PFNGLBINDFRAGDATALOCATIONPROC BindFragDataLocation;
    PFNGLBINDFRAGDATALOCATIONINDEXEDPROC BindFragDataLocationIndexed;
    PFNGLBINDSAMPLERPROC BindSampler;
    PFNGLBINDVERTEXARRAYPROC BindVertexArray;
    PFNGLBITMAPPROC Bitmap;
    PFNGLBLITFRAMEBUFFERPROC BlitFramebuffer;
    PFNGLCALLLISTPROC CallList;
    PFNGLCALLLISTSPROC CallLists;
    PFNGLCLAMPCOLORPROC ClampColor;
    PFNGLCLEARACCUMPROC ClearAccum;
    PFNGLCLEARBUFFERFIPROC ClearBufferfi;
    PFNGLCLEARBUFFERFVPROC ClearBufferfv;
    PFNGLCLEARBUFFERIVPROC ClearBufferiv;
    PFNGLCLEARBUFFERUIVPROC ClearBufferuiv;
    PFNGLCLEARDEPTHPROC ClearDepth;
    PFNGLCLEARINDEXPROC ClearIndex;
    PFNGLCLIENTACTIVETEXTUREPROC ClientActiveTexture;
    PFNGLCLIENTWAITSYNCPROC ClientWaitSync;
    PFNGLCLIPPLANEPROC ClipPlane;
    PFNGLCOLOR3BPROC Color3b;
    PFNGLCOLOR3BVPROC Color3bv;
    PFNGLCOLOR3DPROC Color3d;
    PFNGLCOLOR3DVPROC Color3dv;
    PFNGLCOLOR3FPROC Color3f;
    PFNGLCOLOR3FVPROC Color3fv;
    PFNGLCOLOR3IPROC Color3i;
    PFNGLCOLOR3IVPROC Color3iv;
    PFNGLCOLOR3SPROC Color3s;
    PFNGLCOLOR3SVPROC Color3sv;
    PFNGLCOLOR3UBPROC Color3ub;
    PFNGLCOLOR3UBVPROC Color3ubv;
    PFNGLCOLOR3UIPROC Color3ui;
    PFNGLCOLOR3UIVPROC Color3uiv;
    PFNGLCOLOR3USPROC Color3us;
    PFNGLCOLOR3USVPROC Color3usv;
    PFNGLCOLOR4BPROC Color4b;
    PFNGLCOLOR4BVPROC Color4bv;
    PFNGLCOLOR4DPROC Color4d;
    PFNGLCOLOR4DVPROC Color4dv;
    PFNGLCOLOR4FPROC Color4f;
    PFNGLCOLOR4FVPROC Color4fv;
    PFNGLCOLOR4IPROC Color4i;
    PFNGLCOLOR4IVPROC Color4iv;
    PFNGLCOLOR4SPROC Color4s;
    PFNGLCOLOR4SVPROC Color4sv;
    PFNGLCOLOR4UBPROC Color4ub;
    PFNGLCOLOR4UBVPROC Color4ubv;
    PFNGLCOLOR4UIPROC Color4ui;
    PFNGLCOLOR4UIVPROC Color4uiv;
    PFNGLCOLOR4USPROC Color4us;
    PFNGLCOLOR4USVPROC Color4usv;
    PFNGLCOLORMASKIPROC ColorMaski;
    PFNGLCOLORMATERIALPROC ColorMaterial;
    PFNGLCOLORP3UIPROC ColorP3ui;
    PFNGLCOLORP3UIVPROC ColorP3uiv;
    PFNGLCOLORP4UIPROC ColorP4ui;
    PFNGLCOLORP4UIVPROC ColorP4uiv;
    PFNGLCOLORPOINTERPROC ColorPointer;
    PFNGLCOMPILESHADERPROC CompileShader;
    PFNGLCOMPRESSEDTEXIMAGE1DPROC CompressedTexImage1D;
    PFNGLCOMPRESSEDTEXIMAGE2DPROC CompressedTexImage2D;
    PFNGLCOMPRESSEDTEXIMAGE3DPROC CompressedTexImage3D;
    PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC CompressedTexSubImage1D;
    PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC CompressedTexSubImage3D;
    PFNGLCOPYBUFFERSUBDATAPROC CopyBufferSubData;
    PFNGLCOPYPIXELSPROC CopyPixels;
    PFNGLCOPYTEXIMAGE1DPROC CopyTexImage1D;
    PFNGLCOPYTEXIMAGE2DPROC CopyTexImage2D;
    PFNGLCOPYTEXSUBIMAGE1DPROC CopyTexSubImage1D;
    PFNGLCOPYTEXSUBIMAGE2DPROC CopyTexSubImage2D;
    PFNGLCOPYTEXSUBIMAGE3DPROC CopyTexSubImage3D;
    PFNGLCREATESHADERPROC CreateShader;
    PFNGLDELETEBUFFERSPROC DeleteBuffers;
    PFNGLDELETEFRAMEBUFFERSPROC DeleteFramebuffers;
    PFNGLDELETELISTSPROC DeleteLists;
    PFNGLDELETEPROGRAMPROC DeleteProgram;
    PFNGLDELETEQUERIESPROC DeleteQueries;
    PFNGLDELETERENDERBUFFERSPROC DeleteRenderbuffers;
    PFNGLDELETESAMPLERSPROC DeleteSamplers;
    PFNGLDELETESHADERPROC DeleteShader;
    PFNGLDELETESYNCPROC DeleteSync;
    PFNGLDELETETEXTURESPROC DeleteTextures;
    PFNGLDELETEVERTEXARRAYSPROC DeleteVertexArrays;
    PFNGLDEPTHRANGEPROC DepthRange;
    PFNGLDETACHSHADERPROC DetachShader;
    PFNGLDISABLECLIENTSTATEPROC DisableClientState;
    PFNGLDISABLEIPROC Disablei;
    PFNGLDRAWARRAYSINSTANCEDPROC DrawArraysInstanced;
    PFNGLDRAWBUFFERPROC DrawBuffer;
    PFNGLDRAWBUFFERSPROC DrawBuffers;
    PFNGLDRAWELEMENTSPROC DrawElements;
    PFNGLDRAWELEMENTSBASEVERTEXPROC DrawElementsBaseVertex;
    PFNGLDRAWELEMENTSINSTANCEDPROC DrawElementsInstanced;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC DrawElementsInstancedBaseVertex;
    PFNGLDRAWPIXELSPROC DrawPixels;
    PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC DrawRangeElementsBaseVertex;
    PFNGLEDGEFLAGPROC EdgeFlag;
    PFNGLEDGEFLAGPOINTERPROC EdgeFlagPointer;
    PFNGLEDGEFLAGVPROC EdgeFlagv;
    PFNGLENABLECLIENTSTATEPROC EnableClientState;
    PFNGLENABLEIPROC Enablei;
    PFNGLENDPROC End;
    PFNGLENDCONDITIONALRENDERPROC EndConditionalRender;
    PFNGLENDLISTPROC EndList;
    PFNGLENDQUERYPROC EndQuery;
    PFNGLENDTRANSFORMFEEDBACKPROC EndTransformFeedback;
    PFNGLEVALCOORD1DPROC EvalCoord1d;
    PFNGLEVALCOORD1DVPROC EvalCoord1dv;
    PFNGLEVALCOORD1FPROC EvalCoord1f;
    PFNGLEVALCOORD1FVPROC EvalCoord1fv;
    PFNGLEVALCOORD2DPROC EvalCoord2d;
    PFNGLEVALCOORD2DVPROC EvalCoord2dv;
    PFNGLEVALCOORD2FPROC EvalCoord2f;
    PFNGLEVALCOORD2FVPROC EvalCoord2fv;
    PFNGLEVALMESH1PROC EvalMesh1;
    PFNGLEVALMESH2PROC EvalMesh2;
    PFNGLEVALPOINT1PROC EvalPoint1;
    PFNGLEVALPOINT2PROC EvalPoint2;
    PFNGLFEEDBACKBUFFERPROC FeedbackBuffer;
    PFNGLFENCESYNCPROC FenceSync;
    PFNGLFLUSHMAPPEDBUFFERRANGEPROC FlushMappedBufferRange;
    PFNGLFOGCOORDPOINTERPROC FogCoordPointer;
    PFNGLFOGCOORDDPROC FogCoordd;
    PFNGLFOGCOORDDVPROC FogCoorddv;
    PFNGLFOGCOORDFPROC FogCoordf;
    PFNGLFOGCOORDFVPROC FogCoordfv;
    PFNGLFOGFPROC Fogf;
    PFNGLFOGFVPROC Fogfv;
    PFNGLFOGIPROC Fogi;
    PFNGLFOGIVPROC Fogiv;
    PFNGLFRAMEBUFFERTEXTUREPROC FramebufferTexture;
    PFNGLFRAMEBUFFERTEXTURE1DPROC FramebufferTexture1D;
    PFNGLFRAMEBUFFERTEXTURE3DPROC FramebufferTexture3D;
    PFNGLFRAMEBUFFERTEXTURELAYERPROC FramebufferTextureLayer;
    PFNGLFRUSTUMPROC Frustum;
    PFNGLGENLISTSPROC GenLists;
    PFNGLGENQUERIESPROC GenQueries;
    PFNGLGENSAMPLERSPROC GenSamplers;
    PFNGLGENVERTEXARRAYSPROC GenVertexArrays;
    PFNGLGETACTIVEATTRIBPROC GetActiveAttrib;
    PFNGLGETACTIVEUNIFORMPROC GetActiveUniform;
    PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC GetActiveUniformBlockName;
    PFNGLGETACTIVEUNIFORMBLOCKIVPROC GetActiveUniformBlockiv;
    PFNGLGETACTIVEUNIFORMNAMEPROC GetActiveUniformName;
    PFNGLGETACTIVEUNIFORMSIVPROC GetActiveUniformsiv;
    PFNGLGETATTACHEDSHADERSPROC GetAttachedShaders;
    PFNGLGETBOOLEANI_VPROC GetBooleani_v;
    PFNGLGETBUFFERPARAMETERI64VPROC GetBufferParameteri64v;
    PFNGLGETBUFFERPOINTERVPROC GetBufferPointerv;
    PFNGLGETBUFFERSUBDATAPROC GetBufferSubData;
    PFNGLGETCLIPPLANEPROC GetClipPlane;
    PFNGLGETCOMPRESSEDTEXIMAGEPROC GetCompressedTexImage;
    PFNGLGETDOUBLEVPROC GetDoublev;
    PFNGLGETFRAGDATAINDEXPROC GetFragDataIndex;
    PFNGLGETFRAGDATALOCATIONPROC GetFragDataLocation;
    PFNGLGETINTEGER64I_VPROC GetInteger64i_v;
    PFNGLGETINTEGER64VPROC GetInteger64v;
    PFNGLGETINTEGERI_VPROC GetIntegeri_v;
    PFNGLGETLIGHTFVPROC GetLightfv;
    PFNGLGETLIGHTIVPROC GetLightiv;
    PFNGLGETMAPDVPROC GetMapdv;
    PFNGLGETMAPFVPROC GetMapfv;
    PFNGLGETMAPIVPROC GetMapiv;
    PFNGLGETMATERIALFVPROC GetMaterialfv;
    PFNGLGETMATERIALIVPROC GetMaterialiv;
    PFNGLGETMULTISAMPLEFVPROC GetMultisamplefv;
    PFNGLGETPIXELMAPFVPROC GetPixelMapfv;
    PFNGLGETPIXELMAPUIVPROC GetPixelMapuiv;
    PFNGLGETPIXELMAPUSVPROC GetPixelMapusv;
    PFNGLGETPOINTERVPROC GetPointerv;
    PFNGLGETPOLYGONSTIPPLEPROC GetPolygonStipple;
    PFNGLGETPROGRAMINFOLOGPROC GetProgramInfoLog;
    PFNGLGETQUERYOBJECTI64VPROC GetQueryObjecti64v;
    PFNGLGETQUERYOBJECTIVPROC GetQueryObjectiv;
    PFNGLGETQUERYOBJECTUI64VPROC GetQueryObjectui64v;
    PFNGLGETQUERYOBJECTUIVPROC GetQueryObjectuiv;
    PFNGLGETQUERYIVPROC GetQueryiv;
    PFNGLGETSAMPLERPARAMETERIIVPROC GetSamplerParameterIiv;
    PFNGLGETSAMPLERPARAMETERIUIVPROC GetSamplerParameterIuiv;
    PFNGLGETSAMPLERPARAMETERFVPROC GetSamplerParameterfv;
    PFNGLGETSAMPLERPARAMETERIVPROC GetSamplerParameteriv;
    PFNGLGETSHADERINFOLOGPROC GetShaderInfoLog;
    PFNGLGETSHADERSOURCEPROC GetShaderSource;
    PFNGLGETSHADERIVPROC GetShaderiv;
    PFNGLGETSTRINGIPROC GetStringi;
    PFNGLGETSYNCIVPROC GetSynciv;
    PFNGLGETTEXENVFVPROC GetTexEnvfv;
    PFNGLGETTEXENVIVPROC GetTexEnviv;
    PFNGLGETTEXGENDVPROC GetTexGendv;
    PFNGLGETTEXGENFVPROC GetTexGenfv;
    PFNGLGETTEXGENIVPROC GetTexGeniv;
    PFNGLGETTEXIMAGEPROC GetTexImage;
    PFNGLGETTEXLEVELPARAMETERFVPROC GetTexLevelParameterfv;
    PFNGLGETTEXLEVELPARAMETERIVPROC GetTexLevelParameteriv;
    PFNGLGETTEXPARAMETERIIVPROC GetTexParameterIiv;
    PFNGLGETTEXPARAMETERIUIVPROC GetTexParameterIuiv;
    PFNGLGETTRANSFORMFEEDBACKVARYINGPROC GetTransformFeedbackVarying;
    PFNGLGETUNIFORMBLOCKINDEXPROC GetUniformBlockIndex;
    PFNGLGETUNIFORMINDICESPROC GetUniformIndices;
    PFNGLGETUNIFORMFVPROC GetUniformfv;
    PFNGLGETUNIFORMIVPROC GetUniformiv;
    PFNGLGETUNIFORMUIVPROC GetUniformuiv;
    PFNGLGETVERTEXATTRIBIIVPROC GetVertexAttribIiv;
    PFNGLGETVERTEXATTRIBIUIVPROC GetVertexAttribIuiv;
    PFNGLGETVERTEXATTRIBDVPROC GetVertexAttribdv;
    PFNGLINDEXMASKPROC IndexMask;
    PFNGLINDEXPOINTERPROC IndexPointer;
    PFNGLINDEXDPROC Indexd;
    PFNGLINDEXDVPROC Indexdv;
    PFNGLINDEXFPROC Indexf;
    PFNGLINDEXFVPROC Indexfv;
    PFNGLINDEXIPROC Indexi;
    PFNGLINDEXIVPROC Indexiv;
    PFNGLINDEXSPROC Indexs;
    PFNGLINDEXSVPROC Indexsv;
    PFNGLINDEXUBPROC Indexub;
    PFNGLINDEXUBVPROC Indexubv;
    PFNGLINITNAMESPROC InitNames;
    PFNGLINTERLEAVEDARRAYSPROC InterleavedArrays;
    PFNGLISBUFFERPROC IsBuffer;
    PFNGLISENABLEDIPROC IsEnabledi;
    PFNGLISFRAMEBUFFERPROC IsFramebuffer;
    PFNGLISLISTPROC IsList;
    PFNGLISPROGRAMPROC IsProgram;
    PFNGLISQUERYPROC IsQuery;
    PFNGLISRENDERBUFFERPROC IsRenderbuffer;
    PFNGLISSAMPLERPROC IsSampler;
    PFNGLISSHADERPROC IsShader;
    PFNGLISSYNCPROC IsSync;
    PFNGLISTEXTUREPROC IsTexture;
    PFNGLISVERTEXARRAYPROC IsVertexArray;
    PFNGLLIGHTMODELFPROC LightModelf;
    PFNGLLIGHTMODELFVPROC LightModelfv;
    PFNGLLIGHTMODELIPROC LightModeli;
    PFNGLLIGHTMODELIVPROC LightModeliv;
    PFNGLLIGHTFPROC Lightf;
    PFNGLLIGHTFVPROC Lightfv;
    PFNGLLIGHTIPROC Lighti;
    PFNGLLIGHTIVPROC Lightiv;
    PFNGLLINESTIPPLEPROC LineStipple;
    PFNGLLINKPROGRAMPROC LinkProgram;
    PFNGLLISTBASEPROC ListBase;
    PFNGLLOADIDENTITYPROC LoadIdentity;
    PFNGLLOADMATRIXDPROC LoadMatrixd;
    PFNGLLOADMATRIXFPROC LoadMatrixf;
    PFNGLLOADNAMEPROC LoadName;
    PFNGLLOADTRANSPOSEMATRIXDPROC LoadTransposeMatrixd;
    PFNGLLOADTRANSPOSEMATRIXFPROC LoadTransposeMatrixf;
    PFNGLLOGICOPPROC LogicOp;
    PFNGLMAP1DPROC Map1d;
    PFNGLMAP1FPROC Map1f;
    PFNGLMAP2DPROC Map2d;
    PFNGLMAP2FPROC Map2f;
    PFNGLMAPBUFFERPROC MapBuffer;
    PFNGLMAPBUFFERRANGEPROC MapBufferRange;
    PFNGLMAPGRID1DPROC MapGrid1d;
    PFNGLMAPGRID1FPROC MapGrid1f;
    PFNGLMAPGRID2DPROC MapGrid2d;
    PFNGLMAPGRID2FPROC MapGrid2f;
    PFNGLMATERIALFPROC Materialf;
    PFNGLMATERIALFVPROC Materialfv;
    PFNGLMATERIALIPROC Materiali;
    PFNGLMATERIALIVPROC Materialiv;
    PFNGLMATRIXMODEPROC MatrixMode;
    PFNGLMULTMATRIXDPROC MultMatrixd;
    PFNGLMULTMATRIXFPROC MultMatrixf;
    PFNGLMULTTRANSPOSEMATRIXDPROC MultTransposeMatrixd;
    PFNGLMULTTRANSPOSEMATRIXFPROC MultTransposeMatrixf;
    PFNGLMULTIDRAWARRAYSPROC MultiDrawArrays;
    PFNGLMULTIDRAWELEMENTSPROC MultiDrawElements;
    PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC MultiDrawElementsBaseVertex;
    PFNGLMULTITEXCOORD1DPROC MultiTexCoord1d;
    PFNGLMULTITEXCOORD1DVPROC MultiTexCoord1dv;
    PFNGLMULTITEXCOORD1FPROC MultiTexCoord1f;
    PFNGLMULTITEXCOORD1FVPROC MultiTexCoord1fv;
    PFNGLMULTITEXCOORD1IPROC MultiTexCoord1i;
    PFNGLMULTITEXCOORD1IVPROC MultiTexCoord1iv;
    PFNGLMULTITEXCOORD1SPROC MultiTexCoord1s;
    PFNGLMULTITEXCOORD1SVPROC MultiTexCoord1sv;
    PFNGLMULTITEXCOORD2DPROC MultiTexCoord2d;
    PFNGLMULTITEXCOORD2DVPROC MultiTexCoord2dv;
    PFNGLMULTITEXCOORD2FPROC MultiTexCoord2f;
    PFNGLMULTITEXCOORD2FVPROC MultiTexCoord2fv;
    PFNGLMULTITEXCOORD2IPROC MultiTexCoord2i;
    PFNGLMULTITEXCOORD2IVPROC MultiTexCoord2iv;
    PFNGLMULTITEXCOORD2SPROC MultiTexCoord2s;
    PFNGLMULTITEXCOORD2SVPROC MultiTexCoord2sv;
    PFNGLMULTITEXCOORD3DPROC MultiTexCoord3d;
    PFNGLMULTITEXCOORD3DVPROC MultiTexCoord3dv;
    PFNGLMULTITEXCOORD3FPROC MultiTexCoord3f;
    PFNGLMULTITEXCOORD3FVPROC MultiTexCoord3fv;
    PFNGLMULTITEXCOORD3IPROC MultiTexCoord3i;
    PFNGLMULTITEXCOORD3IVPROC MultiTexCoord3iv;
    PFNGLMULTITEXCOORD3SPROC MultiTexCoord3s;
    PFNGLMULTITEXCOORD3SVPROC MultiTexCoord3sv;
    PFNGLMULTITEXCOORD4DPROC MultiTexCoord4d;
    PFNGLMULTITEXCOORD4DVPROC MultiTexCoord4dv;
    PFNGLMULTITEXCOORD4FPROC MultiTexCoord4f;
    PFNGLMULTITEXCOORD4FVPROC MultiTexCoord4fv;
    PFNGLMULTITEXCOORD4IPROC MultiTexCoord4i;
    PFNGLMULTITEXCOORD4IVPROC MultiTexCoord4iv;
    PFNGLMULTITEXCOORD4SPROC MultiTexCoord4s;
    PFNGLMULTITEXCOORD4SVPROC MultiTexCoord4sv;
    PFNGLMULTITEXCOORDP1UIPROC MultiTexCoordP1ui;
    PFNGLMULTITEXCOORDP1UIVPROC MultiTexCoordP1uiv;
    PFNGLMULTITEXCOORDP2UIPROC MultiTexCoordP2ui;
    PFNGLMULTITEXCOORDP2UIVPROC MultiTexCoordP2uiv;
    PFNGLMULTITEXCOORDP3UIPROC MultiTexCoordP3ui;
    PFNGLMULTITEXCOORDP3UIVPROC MultiTexCoordP3uiv;
    PFNGLMULTITEXCOORDP4UIPROC MultiTexCoordP4ui;
    PFNGLMULTITEXCOORDP4UIVPROC MultiTexCoordP4uiv;
    PFNGLNEWLISTPROC NewList;
    PFNGLNORMAL3BPROC Normal3b;
    PFNGLNORMAL3BVPROC Normal3bv;
    PFNGLNORMAL3DPROC Normal3d;
    PFNGLNORMAL3DVPROC Normal3dv;
    PFNGLNORMAL3FPROC Normal3f;
    PFNGLNORMAL3FVPROC Normal3fv;
    PFNGLNORMAL3IPROC Normal3i;
    PFNGLNORMAL3IVPROC Normal3iv;
    PFNGLNORMAL3SPROC Normal3s;
    PFNGLNORMAL3SVPROC Normal3sv;
    PFNGLNORMALP3UIPROC NormalP3ui;
    PFNGLNORMALP3UIVPROC NormalP3uiv;
    PFNGLNORMALPOINTERPROC NormalPointer;
    PFNGLORTHOPROC Ortho;
    PFNGLPASSTHROUGHPROC PassThrough;
    PFNGLPIXELMAPFVPROC PixelMapfv;
    PFNGLPIXELMAPUIVPROC PixelMapuiv;
    PFNGLPIXELMAPUSVPROC PixelMapusv;
    PFNGLPIXELSTOREFPROC PixelStoref;
    PFNGLPIXELTRANSFERFPROC PixelTransferf;
    PFNGLPIXELTRANSFERIPROC PixelTransferi;
    PFNGLPIXELZOOMPROC PixelZoom;
    PFNGLPOINTPARAMETERFPROC PointParameterf;
    PFNGLPOINTPARAMETERFVPROC PointParameterfv;
    PFNGLPOINTPARAMETERIPROC PointParameteri;
    PFNGLPOINTPARAMETERIVPROC PointParameteriv;
    PFNGLPOINTSIZEPROC PointSize;
    PFNGLPOLYGONMODEPROC PolygonMode;
    PFNGLPOLYGONSTIPPLEPROC PolygonStipple;
    PFNGLPOPATTRIBPROC PopAttrib;
    PFNGLPOPCLIENTATTRIBPROC PopClientAttrib;
    PFNGLPOPMATRIXPROC PopMatrix;
    PFNGLPOPNAMEPROC PopName;
    PFNGLPRIMITIVERESTARTINDEXPROC PrimitiveRestartIndex;
    PFNGLPRIORITIZETEXTURESPROC PrioritizeTextures;
    PFNGLPROVOKINGVERTEXPROC ProvokingVertex;
    PFNGLPUSHATTRIBPROC PushAttrib;
    PFNGLPUSHCLIENTATTRIBPROC PushClientAttrib;
    PFNGLPUSHMATRIXPROC PushMatrix;
    PFNGLPUSHNAMEPROC PushName;
    PFNGLQUERYCOUNTERPROC QueryCounter;
    PFNGLRASTERPOS2DPROC RasterPos2d;
    PFNGLRASTERPOS2DVPROC RasterPos2dv;
    PFNGLRASTERPOS2FPROC RasterPos2f;
    PFNGLRASTERPOS2FVPROC RasterPos2fv;
    PFNGLRASTERPOS2IPROC RasterPos2i;
    PFNGLRASTERPOS2IVPROC RasterPos2iv;
    PFNGLRASTERPOS2SPROC RasterPos2s;
    PFNGLRASTERPOS2SVPROC RasterPos2sv;
    PFNGLRASTERPOS3DPROC RasterPos3d;
    PFNGLRASTERPOS3DVPROC RasterPos3dv;
    PFNGLRASTERPOS3FPROC RasterPos3f;
    PFNGLRASTERPOS3FVPROC RasterPos3fv;
    PFNGLRASTERPOS3IPROC RasterPos3i;
    PFNGLRASTERPOS3IVPROC RasterPos3iv;
    PFNGLRASTERPOS3SPROC RasterPos3s;
    PFNGLRASTERPOS3SVPROC RasterPos3sv;
    PFNGLRASTERPOS4DPROC RasterPos4d;
    PFNGLRASTERPOS4DVPROC RasterPos4dv;
    PFNGLRASTERPOS4FPROC RasterPos4f;
    PFNGLRASTERPOS4FVPROC RasterPos4fv;
    PFNGLRASTERPOS4IPROC RasterPos4i;
    PFNGLRASTERPOS4IVPROC RasterPos4iv;
    PFNGLRASTERPOS4SPROC RasterPos4s;
    PFNGLRASTERPOS4SVPROC RasterPos4sv;
    PFNGLREADBUFFERPROC ReadBuffer;
    PFNGLREADPIXELSPROC ReadPixels;
    PFNGLRECTDPROC Rectd;
    PFNGLRECTDVPROC Rectdv;
    PFNGLRECTFPROC Rectf;
    PFNGLRECTFVPROC Rectfv;
    PFNGLRECTIPROC Recti;
    PFNGLRECTIVPROC Rectiv;
    PFNGLRECTSPROC Rects;
    PFNGLRECTSVPROC Rectsv;
    PFNGLRENDERMODEPROC RenderMode;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC RenderbufferStorageMultisample;
    PFNGLROTATEDPROC Rotated;
    PFNGLROTATEFPROC Rotatef;
    PFNGLSAMPLEMASKIPROC SampleMaski;
    PFNGLSAMPLERPARAMETERIIVPROC SamplerParameterIiv;
    PFNGLSAMPLERPARAMETERIUIVPROC SamplerParameterIuiv;
    PFNGLSAMPLERPARAMETERFPROC SamplerParameterf;
    PFNGLSAMPLERPARAMETERFVPROC SamplerParameterfv;
    PFNGLSAMPLERPARAMETERIPROC SamplerParameteri;
    PFNGLSAMPLERPARAMETERIVPROC SamplerParameteriv;
    PFNGLSCALEDPROC Scaled;
    PFNGLSCALEFPROC Scalef;
    PFNGLSECONDARYCOLOR3BPROC SecondaryColor3b;
    PFNGLSECONDARYCOLOR3BVPROC SecondaryColor3bv;
    PFNGLSECONDARYCOLOR3DPROC SecondaryColor3d;
    PFNGLSECONDARYCOLOR3DVPROC SecondaryColor3dv;
    PFNGLSECONDARYCOLOR3FPROC SecondaryColor3f;
    PFNGLSECONDARYCOLOR3FVPROC SecondaryColor3fv;
    PFNGLSECONDARYCOLOR3IPROC SecondaryColor3i;
    PFNGLSECONDARYCOLOR3IVPROC SecondaryColor3iv;
    PFNGLSECONDARYCOLOR3SPROC SecondaryColor3s;
    PFNGLSECONDARYCOLOR3SVPROC SecondaryColor3sv;
    PFNGLSECONDARYCOLOR3UBPROC SecondaryColor3ub;
    PFNGLSECONDARYCOLOR3UBVPROC SecondaryColor3ubv;
    PFNGLSECONDARYCOLOR3UIPROC SecondaryColor3ui;
    PFNGLSECONDARYCOLOR3UIVPROC SecondaryColor3uiv;
    PFNGLSECONDARYCOLOR3USPROC SecondaryColor3us;
    PFNGLSECONDARYCOLOR3USVPROC SecondaryColor3usv;
    PFNGLSECONDARYCOLORP3UIPROC SecondaryColorP3ui;
    PFNGLSECONDARYCOLORP3UIVPROC SecondaryColorP3uiv;
    PFNGLSECONDARYCOLORPOINTERPROC SecondaryColorPointer;
    PFNGLSELECTBUFFERPROC SelectBuffer;
    PFNGLSHADEMODELPROC ShadeModel;
    PFNGLSHADERSOURCEPROC ShaderSource;
    PFNGLTEXBUFFERPROC TexBuffer;
    PFNGLTEXCOORD1DPROC TexCoord1d;
    PFNGLTEXCOORD1DVPROC TexCoord1dv;
    PFNGLTEXCOORD1FPROC TexCoord1f;
    PFNGLTEXCOORD1FVPROC TexCoord1fv;
    PFNGLTEXCOORD1IPROC TexCoord1i;
    PFNGLTEXCOORD1IVPROC TexCoord1iv;
    PFNGLTEXCOORD1SPROC TexCoord1s;
    PFNGLTEXCOORD1SVPROC TexCoord1sv;
    PFNGLTEXCOORD2DPROC TexCoord2d;
    PFNGLTEXCOORD2DVPROC TexCoord2dv;
    PFNGLTEXCOORD2FPROC TexCoord2f;
    PFNGLTEXCOORD2FVPROC TexCoord2fv;
    PFNGLTEXCOORD2IPROC TexCoord2i;
    PFNGLTEXCOORD2IVPROC TexCoord2iv;
    PFNGLTEXCOORD2SPROC TexCoord2s;
    PFNGLTEXCOORD2SVPROC TexCoord2sv;
    PFNGLTEXCOORD3DPROC TexCoord3d;
    PFNGLTEXCOORD3DVPROC TexCoord3dv;
    PFNGLTEXCOORD3FPROC TexCoord3f;
    PFNGLTEXCOORD3FVPROC TexCoord3fv;
    PFNGLTEXCOORD3IPROC TexCoord3i;
    PFNGLTEXCOORD3IVPROC TexCoord3iv;
    PFNGLTEXCOORD3SPROC TexCoord3s;
    PFNGLTEXCOORD3SVPROC TexCoord3sv;
    PFNGLTEXCOORD4DPROC TexCoord4d;
    PFNGLTEXCOORD4DVPROC TexCoord4dv;
    PFNGLTEXCOORD4FPROC TexCoord4f;
    PFNGLTEXCOORD4FVPROC TexCoord4fv;
    PFNGLTEXCOORD4IPROC TexCoord4i;
    PFNGLTEXCOORD4IVPROC TexCoord4iv;
    PFNGLTEXCOORD4SPROC TexCoord4s;
    PFNGLTEXCOORD4SVPROC TexCoord4sv;
    PFNGLTEXCOORDP1UIPROC TexCoordP1ui;
    PFNGLTEXCOORDP1UIVPROC TexCoordP1uiv;
    PFNGLTEXCOORDP2UIPROC TexCoordP2ui;
    PFNGLTEXCOORDP2UIVPROC TexCoordP2uiv;
    PFNGLTEXCOORDP3UIPROC TexCoordP3ui;
    PFNGLTEXCOORDP3UIVPROC TexCoordP3uiv;
    PFNGLTEXCOORDP4UIPROC TexCoordP4ui;
    PFNGLTEXCOORDP4UIVPROC TexCoordP4uiv;
    PFNGLTEXCOORDPOINTERPROC TexCoordPointer;
    PFNGLTEXENVFPROC TexEnvf;
    PFNGLTEXENVFVPROC TexEnvfv;
    PFNGLTEXENVIPROC TexEnvi;
    PFNGLTEXENVIVPROC TexEnviv;
    PFNGLTEXGENDPROC TexGend;
    PFNGLTEXGENDVPROC TexGendv;
    PFNGLTEXGENFPROC TexGenf;
    PFNGLTEXGENFVPROC TexGenfv;
    PFNGLTEXGENIPROC TexGeni;
    PFNGLTEXGENIVPROC TexGeniv;
    PFNGLTEXIMAGE1DPROC TexImage1D;
    PFNGLTEXIMAGE2DPROC TexImage2D;
    PFNGLTEXIMAGE2DMULTISAMPLEPROC TexImage2DMultisample;
    PFNGLTEXIMAGE3DPROC TexImage3D;
    PFNGLTEXIMAGE3DMULTISAMPLEPROC TexImage3DMultisample;
    PFNGLTEXPARAMETERIIVPROC TexParameterIiv;
    PFNGLTEXPARAMETERIUIVPROC TexParameterIuiv;
    PFNGLTEXSUBIMAGE1DPROC TexSubImage1D;
    PFNGLTEXSUBIMAGE3DPROC TexSubImage3D;
    PFNGLTRANSFORMFEEDBACKVARYINGSPROC TransformFeedbackVaryings;
    PFNGLTRANSLATEDPROC Translated;
    PFNGLTRANSLATEFPROC Translatef;
    PFNGLUNIFORM1UIPROC Uniform1ui;
    PFNGLUNIFORM1UIVPROC Uniform1uiv;
    PFNGLUNIFORM2UIPROC Uniform2ui;
    PFNGLUNIFORM2UIVPROC Uniform2uiv;
    PFNGLUNIFORM3UIPROC Uniform3ui;
    PFNGLUNIFORM3UIVPROC Uniform3uiv;
    PFNGLUNIFORM4UIPROC Uniform4ui;
    PFNGLUNIFORM4UIVPROC Uniform4uiv;
    PFNGLUNIFORMBLOCKBINDINGPROC UniformBlockBinding;
    PFNGLUNIFORMMATRIX2X3FVPROC UniformMatrix2x3fv;
    PFNGLUNIFORMMATRIX2X4FVPROC UniformMatrix2x4fv;
    PFNGLUNIFORMMATRIX3X2FVPROC UniformMatrix3x2fv;
    PFNGLUNIFORMMATRIX3X4FVPROC UniformMatrix3x4fv;
    PFNGLUNIFORMMATRIX4X2FVPROC UniformMatrix4x2fv;
    PFNGLUNIFORMMATRIX4X3FVPROC UniformMatrix4x3fv;
    PFNGLUNMAPBUFFERPROC UnmapBuffer;
    PFNGLVALIDATEPROGRAMPROC ValidateProgram;
    PFNGLVERTEX2DPROC Vertex2d;
    PFNGLVERTEX2DVPROC Vertex2dv;
    PFNGLVERTEX2FPROC Vertex2f;
    PFNGLVERTEX2FVPROC Vertex2fv;
    PFNGLVERTEX2IPROC Vertex2i;
    PFNGLVERTEX2IVPROC Vertex2iv;
    PFNGLVERTEX2SPROC Vertex2s;
    PFNGLVERTEX2SVPROC Vertex2sv;
    PFNGLVERTEX3DPROC Vertex3d;
    PFNGLVERTEX3DVPROC Vertex3dv;
    PFNGLVERTEX3FPROC Vertex3f;
    PFNGLVERTEX3FVPROC Vertex3fv;
    PFNGLVERTEX3IPROC Vertex3i;
    PFNGLVERTEX3IVPROC Vertex3iv;
    PFNGLVERTEX3SPROC Vertex3s;
    PFNGLVERTEX3SVPROC Vertex3sv;
    PFNGLVERTEX4DPROC Vertex4d;
    PFNGLVERTEX4DVPROC Vertex4dv;
    PFNGLVERTEX4FPROC Vertex4f;
    PFNGLVERTEX4FVPROC Vertex4fv;
    PFNGLVERTEX4IPROC Vertex4i;
    PFNGLVERTEX4IVPROC Vertex4iv;
    PFNGLVERTEX4SPROC Vertex4s;
    PFNGLVERTEX4SVPROC Vertex4sv;
    PFNGLVERTEXATTRIB1DPROC VertexAttrib1d;
    PFNGLVERTEXATTRIB1DVPROC VertexAttrib1dv;
    PFNGLVERTEXATTRIB1SPROC VertexAttrib1s;
    PFNGLVERTEXATTRIB1SVPROC VertexAttrib1sv;
    PFNGLVERTEXATTRIB2DPROC VertexAttrib2d;
    PFNGLVERTEXATTRIB2DVPROC VertexAttrib2dv;
    PFNGLVERTEXATTRIB2SPROC VertexAttrib2s;
    PFNGLVERTEXATTRIB2SVPROC VertexAttrib2sv;
    PFNGLVERTEXATTRIB3DPROC VertexAttrib3d;
    PFNGLVERTEXATTRIB3DVPROC VertexAttrib3dv;
    PFNGLVERTEXATTRIB3SPROC VertexAttrib3s;
    PFNGLVERTEXATTRIB3SVPROC VertexAttrib3sv;
    PFNGLVERTEXATTRIB4NBVPROC VertexAttrib4Nbv;
    PFNGLVERTEXATTRIB4NIVPROC VertexAttrib4Niv;
    PFNGLVERTEXATTRIB4NSVPROC VertexAttrib4Nsv;
    PFNGLVERTEXATTRIB4NUBPROC VertexAttrib4Nub;
    PFNGLVERTEXATTRIB4NUBVPROC VertexAttrib4Nubv;
    PFNGLVERTEXATTRIB4NUIVPROC VertexAttrib4Nuiv;
    PFNGLVERTEXATTRIB4NUSVPROC VertexAttrib4Nusv;
    PFNGLVERTEXATTRIB4BVPROC VertexAttrib4bv;
    PFNGLVERTEXATTRIB4DPROC VertexAttrib4d;
    PFNGLVERTEXATTRIB4DVPROC VertexAttrib4dv;
    PFNGLVERTEXATTRIB4IVPROC VertexAttrib4iv;
    PFNGLVERTEXATTRIB4SPROC VertexAttrib4s;
    PFNGLVERTEXATTRIB4SVPROC VertexAttrib4sv;
    PFNGLVERTEXATTRIB4UBVPROC VertexAttrib4ubv;
    PFNGLVERTEXATTRIB4UIVPROC VertexAttrib4uiv;
    PFNGLVERTEXATTRIB4USVPROC VertexAttrib4usv;
    PFNGLVERTEXATTRIBDIVISORPROC VertexAttribDivisor;
    PFNGLVERTEXATTRIBI1IPROC VertexAttribI1i;
    PFNGLVERTEXATTRIBI1IVPROC VertexAttribI1iv;
    PFNGLVERTEXATTRIBI1UIPROC VertexAttribI1ui;
    PFNGLVERTEXATTRIBI1UIVPROC VertexAttribI1uiv;
    PFNGLVERTEXATTRIBI2IPROC VertexAttribI2i;
    PFNGLVERTEXATTRIBI2IVPROC VertexAttribI2iv;
    PFNGLVERTEXATTRIBI2UIPROC VertexAttribI2ui;
    PFNGLVERTEXATTRIBI2UIVPROC VertexAttribI2uiv;
    PFNGLVERTEXATTRIBI3IPROC VertexAttribI3i;
    PFNGLVERTEXATTRIBI3IVPROC VertexAttribI3iv;
    PFNGLVERTEXATTRIBI3UIPROC VertexAttribI3ui;
    PFNGLVERTEXATTRIBI3UIVPROC VertexAttribI3uiv;
    PFNGLVERTEXATTRIBI4BVPROC VertexAttribI4bv;
    PFNGLVERTEXATTRIBI4IPROC VertexAttribI4i;
    PFNGLVERTEXATTRIBI4IVPROC VertexAttribI4iv;
    PFNGLVERTEXATTRIBI4SVPROC VertexAttribI4sv;
    PFNGLVERTEXATTRIBI4UBVPROC VertexAttribI4ubv;
    PFNGLVERTEXATTRIBI4UIPROC VertexAttribI4ui;
    PFNGLVERTEXATTRIBI4UIVPROC VertexAttribI4uiv;
    PFNGLVERTEXATTRIBI4USVPROC VertexAttribI4usv;
    PFNGLVERTEXATTRIBIPOINTERPROC VertexAttribIPointer;
    PFNGLVERTEXATTRIBP1UIPROC VertexAttribP1ui;
    PFNGLVERTEXATTRIBP1UIVPROC VertexAttribP1uiv;
    PFNGLVERTEXATTRIBP2UIPROC VertexAttribP2ui;
    PFNGLVERTEXATTRIBP2UIVPROC VertexAttribP2uiv;
    PFNGLVERTEXATTRIBP3UIPROC VertexAttribP3ui;
    PFNGLVERTEXATTRIBP3UIVPROC VertexAttribP3uiv;
    PFNGLVERTEXATTRIBP4UIPROC VertexAttribP4ui;
    PFNGLVERTEXATTRIBP4UIVPROC VertexAttribP4uiv;
    PFNGLVERTEXP2UIPROC VertexP2ui;
    PFNGLVERTEXP2UIVPROC VertexP2uiv;
    PFNGLVERTEXP3UIPROC VertexP3ui;
    PFNGLVERTEXP3UIVPROC VertexP3uiv;
    PFNGLVERTEXP4UIPROC VertexP4ui;
    PFNGLVERTEXP4UIVPROC VertexP4uiv;
    PFNGLVERTEXPOINTERPROC VertexPointer;
    PFNGLWAITSYNCPROC WaitSync;
    PFNGLWINDOWPOS2DPROC WindowPos2d;
    PFNGLWINDOWPOS2DVPROC WindowPos2dv;
    PFNGLWINDOWPOS2FPROC WindowPos2f;
    PFNGLWINDOWPOS2FVPROC WindowPos2fv;
    PFNGLWINDOWPOS2IPROC WindowPos2i;
    PFNGLWINDOWPOS2IVPROC WindowPos2iv;
    PFNGLWINDOWPOS2SPROC WindowPos2s;
    PFNGLWINDOWPOS2SVPROC WindowPos2sv;
    PFNGLWINDOWPOS3DPROC WindowPos3d;
    PFNGLWINDOWPOS3DVPROC WindowPos3dv;
    PFNGLWINDOWPOS3FPROC WindowPos3f;
    PFNGLWINDOWPOS3FVPROC WindowPos3fv;
    PFNGLWINDOWPOS3IPROC WindowPos3i;
    PFNGLWINDOWPOS3IVPROC WindowPos3iv;
    PFNGLWINDOWPOS3SPROC WindowPos3s;
    PFNGLWINDOWPOS3SVPROC WindowPos3sv;
    PFNGLACTIVESHADERPROGRAMPROC ActiveShaderProgram;
    PFNGLBINDIMAGETEXTUREPROC BindImageTexture;
    PFNGLBINDPROGRAMPIPELINEPROC BindProgramPipeline;
    PFNGLBINDTRANSFORMFEEDBACKPROC BindTransformFeedback;
    PFNGLBINDVERTEXBUFFERPROC BindVertexBuffer;
    PFNGLBLENDBARRIERPROC BlendBarrier;
    PFNGLBLENDEQUATIONSEPARATEIPROC BlendEquationSeparatei;
    PFNGLBLENDEQUATIONIPROC BlendEquationi;
    PFNGLBLENDFUNCSEPARATEIPROC BlendFuncSeparatei;
    PFNGLBLENDFUNCIPROC BlendFunci;
    PFNGLCOPYIMAGESUBDATAPROC CopyImageSubData;
    PFNGLCREATESHADERPROGRAMVPROC CreateShaderProgramv;
    PFNGLDEBUGMESSAGECALLBACKPROC DebugMessageCallback;
    PFNGLDEBUGMESSAGECONTROLPROC DebugMessageControl;
    PFNGLDEBUGMESSAGEINSERTPROC DebugMessageInsert;
    PFNGLDELETEPROGRAMPIPELINESPROC DeleteProgramPipelines;
    PFNGLDELETETRANSFORMFEEDBACKSPROC DeleteTransformFeedbacks;
    PFNGLDISPATCHCOMPUTEPROC DispatchCompute;
    PFNGLDISPATCHCOMPUTEINDIRECTPROC DispatchComputeIndirect;
    PFNGLDRAWARRAYSINDIRECTPROC DrawArraysIndirect;
    PFNGLDRAWELEMENTSINDIRECTPROC DrawElementsIndirect;
    PFNGLFRAMEBUFFERPARAMETERIPROC FramebufferParameteri;
    PFNGLGENPROGRAMPIPELINESPROC GenProgramPipelines;
    PFNGLGENTRANSFORMFEEDBACKSPROC GenTransformFeedbacks;
    PFNGLGETDEBUGMESSAGELOGPROC GetDebugMessageLog;
    PFNGLGETFRAMEBUFFERPARAMETERIVPROC GetFramebufferParameteriv;
    PFNGLGETINTERNALFORMATIVPROC GetInternalformativ;
    PFNGLGETOBJECTLABELPROC GetObjectLabel;
    PFNGLGETOBJECTPTRLABELPROC GetObjectPtrLabel;
    PFNGLGETPROGRAMBINARYPROC GetProgramBinary;
    PFNGLGETPROGRAMINTERFACEIVPROC GetProgramInterfaceiv;
    PFNGLGETPROGRAMPIPELINEINFOLOGPROC GetProgramPipelineInfoLog;
    PFNGLGETPROGRAMPIPELINEIVPROC GetProgramPipelineiv;
    PFNGLGETPROGRAMRESOURCEINDEXPROC GetProgramResourceIndex;
    PFNGLGETPROGRAMRESOURCELOCATIONPROC GetProgramResourceLocation;
    PFNGLGETPROGRAMRESOURCENAMEPROC GetProgramResourceName;
    PFNGLGETPROGRAMRESOURCEIVPROC GetProgramResourceiv;
    PFNGLGETSHADERPRECISIONFORMATPROC GetShaderPrecisionFormat;
    PFNGLGETNUNIFORMUIVPROC GetnUniformuiv;
    PFNGLINVALIDATEFRAMEBUFFERPROC InvalidateFramebuffer;
    PFNGLINVALIDATESUBFRAMEBUFFERPROC InvalidateSubFramebuffer;
    PFNGLISPROGRAMPIPELINEPROC IsProgramPipeline;
    PFNGLISTRANSFORMFEEDBACKPROC IsTransformFeedback;
    PFNGLMEMORYBARRIERPROC MemoryBarrier;
    PFNGLMEMORYBARRIERBYREGIONPROC MemoryBarrierByRegion;
    PFNGLMINSAMPLESHADINGPROC MinSampleShading;
    PFNGLOBJECTLABELPROC ObjectLabel;
    PFNGLOBJECTPTRLABELPROC ObjectPtrLabel;
    PFNGLPATCHPARAMETERIPROC PatchParameteri;
    PFNGLPAUSETRANSFORMFEEDBACKPROC PauseTransformFeedback;
    PFNGLPOPDEBUGGROUPPROC PopDebugGroup;
    PFNGLPRIMITIVEBOUNDINGBOXPROC PrimitiveBoundingBox;
    PFNGLPROGRAMPARAMETERIPROC ProgramParameteri;
    PFNGLPROGRAMUNIFORM1FPROC ProgramUniform1f;
    PFNGLPROGRAMUNIFORM1FVPROC ProgramUniform1fv;
    PFNGLPROGRAMUNIFORM1IPROC ProgramUniform1i;
    PFNGLPROGRAMUNIFORM1IVPROC ProgramUniform1iv;
    PFNGLPROGRAMUNIFORM1UIPROC ProgramUniform1ui;
    PFNGLPROGRAMUNIFORM1UIVPROC ProgramUniform1uiv;
    PFNGLPROGRAMUNIFORM2FPROC ProgramUniform2f;
    PFNGLPROGRAMUNIFORM2FVPROC ProgramUniform2fv;
    PFNGLPROGRAMUNIFORM2IPROC ProgramUniform2i;
    PFNGLPROGRAMUNIFORM2IVPROC ProgramUniform2iv;
    PFNGLPROGRAMUNIFORM2UIPROC ProgramUniform2ui;
    PFNGLPROGRAMUNIFORM2UIVPROC ProgramUniform2uiv;
    PFNGLPROGRAMUNIFORM3FPROC ProgramUniform3f;
    PFNGLPROGRAMUNIFORM3FVPROC ProgramUniform3fv;
    PFNGLPROGRAMUNIFORM3IPROC ProgramUniform3i;
    PFNGLPROGRAMUNIFORM3IVPROC ProgramUniform3iv;
    PFNGLPROGRAMUNIFORM3UIPROC ProgramUniform3ui;
    PFNGLPROGRAMUNIFORM3UIVPROC ProgramUniform3uiv;
    PFNGLPROGRAMUNIFORM4FPROC ProgramUniform4f;
    PFNGLPROGRAMUNIFORM4FVPROC ProgramUniform4fv;
    PFNGLPROGRAMUNIFORM4IPROC ProgramUniform4i;
    PFNGLPROGRAMUNIFORM4IVPROC ProgramUniform4iv;
    PFNGLPROGRAMUNIFORM4UIPROC ProgramUniform4ui;
    PFNGLPROGRAMUNIFORM4UIVPROC ProgramUniform4uiv;
    PFNGLPROGRAMUNIFORMMATRIX2FVPROC ProgramUniformMatrix2fv;
    PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC ProgramUniformMatrix2x3fv;
    PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC ProgramUniformMatrix2x4fv;
    PFNGLPROGRAMUNIFORMMATRIX3FVPROC ProgramUniformMatrix3fv;
    PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC ProgramUniformMatrix3x2fv;
    PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC ProgramUniformMatrix3x4fv;
    PFNGLPROGRAMUNIFORMMATRIX4FVPROC ProgramUniformMatrix4fv;
    PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC ProgramUniformMatrix4x2fv;
    PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC ProgramUniformMatrix4x3fv;
    PFNGLPUSHDEBUGGROUPPROC PushDebugGroup;
    PFNGLRELEASESHADERCOMPILERPROC ReleaseShaderCompiler;
    PFNGLRESUMETRANSFORMFEEDBACKPROC ResumeTransformFeedback;
    PFNGLSHADERBINARYPROC ShaderBinary;
    PFNGLTEXBUFFERRANGEPROC TexBufferRange;
    PFNGLTEXSTORAGE2DMULTISAMPLEPROC TexStorage2DMultisample;
    PFNGLTEXSTORAGE3DPROC TexStorage3D;
    PFNGLTEXSTORAGE3DMULTISAMPLEPROC TexStorage3DMultisample;
    PFNGLUSEPROGRAMSTAGESPROC UseProgramStages;
    PFNGLVALIDATEPROGRAMPIPELINEPROC ValidateProgramPipeline;
    PFNGLVERTEXATTRIBBINDINGPROC VertexAttribBinding;
    PFNGLVERTEXATTRIBFORMATPROC VertexAttribFormat;
    PFNGLVERTEXATTRIBIFORMATPROC VertexAttribIFormat;
    PFNGLVERTEXBINDINGDIVISORPROC VertexBindingDivisor;
    PFNGLALPHAFUNCXPROC AlphaFuncx;
    PFNGLCLEARCOLORXPROC ClearColorx;
    PFNGLCLEARDEPTHXPROC ClearDepthx;
    PFNGLCLIPPLANEFPROC ClipPlanef;
    PFNGLCLIPPLANEXPROC ClipPlanex;
    PFNGLCOLOR4XPROC Color4x;
    PFNGLDEPTHRANGEXPROC DepthRangex;
    PFNGLFOGXPROC Fogx;
    PFNGLFOGXVPROC Fogxv;
    PFNGLFRUSTUMFPROC Frustumf;
    PFNGLFRUSTUMXPROC Frustumx;
    PFNGLGETCLIPPLANEFPROC GetClipPlanef;
    PFNGLGETCLIPPLANEXPROC GetClipPlanex;
    PFNGLGETFIXEDVPROC GetFixedv;
    PFNGLGETLIGHTXVPROC GetLightxv;
    PFNGLGETMATERIALXVPROC GetMaterialxv;
    PFNGLGETTEXENVXVPROC GetTexEnvxv;
    PFNGLGETTEXPARAMETERXVPROC GetTexParameterxv;
    PFNGLLIGHTMODELXPROC LightModelx;
    PFNGLLIGHTMODELXVPROC LightModelxv;
    PFNGLLIGHTXPROC Lightx;
    PFNGLLIGHTXVPROC Lightxv;
    PFNGLLINEWIDTHXPROC LineWidthx;
    PFNGLLOADMATRIXXPROC LoadMatrixx;
    PFNGLMATERIALXPROC Materialx;
    PFNGLMATERIALXVPROC Materialxv;
    PFNGLMULTMATRIXXPROC MultMatrixx;
    PFNGLMULTITEXCOORD4XPROC MultiTexCoord4x;
    PFNGLNORMAL3XPROC Normal3x;
    PFNGLORTHOFPROC Orthof;
    PFNGLORTHOXPROC Orthox;
    PFNGLPOINTPARAMETERXPROC PointParameterx;
    PFNGLPOINTPARAMETERXVPROC PointParameterxv;
    PFNGLPOINTSIZEXPROC PointSizex;
    PFNGLPOLYGONOFFSETXPROC PolygonOffsetx;
    PFNGLROTATEXPROC Rotatex;
    PFNGLSAMPLECOVERAGEXPROC SampleCoveragex;
    PFNGLSCALEXPROC Scalex;
    PFNGLTEXENVXPROC TexEnvx;
    PFNGLTEXENVXVPROC TexEnvxv;
    PFNGLTEXPARAMETERXPROC TexParameterx;
    PFNGLTEXPARAMETERXVPROC TexParameterxv;
    PFNGLTRANSLATEXPROC Translatex;
} GladGLContext;

GLAD_API_CALL GladGLContext glad_gl_context;

#define GLAD_GL_SC_VERSION_2_0 (glad_gl_context.SC_VERSION_2_0)
#define GLAD_GL_VERSION_1_0 (glad_gl_context.VERSION_1_0)
#define GLAD_GL_VERSION_1_1 (glad_gl_context.VERSION_1_1)
#define GLAD_GL_VERSION_1_2 (glad_gl_context.VERSION_1_2)
#define GLAD_GL_VERSION_1_3 (glad_gl_context.VERSION_1_3)
#define GLAD_GL_VERSION_1_4 (glad_gl_context.VERSION_1_4)
#define GLAD_GL_VERSION_1_5 (glad_gl_context.VERSION_1_5)
#define GLAD_GL_VERSION_2_0 (glad_gl_context.VERSION_2_0)
#define GLAD_GL_VERSION_2_1 (glad_gl_context.VERSION_2_1)
#define GLAD_GL_VERSION_3_0 (glad_gl_context.VERSION_3_0)
#define GLAD_GL_VERSION_3_1 (glad_gl_context.VERSION_3_1)
#define GLAD_GL_VERSION_3_2 (glad_gl_context.VERSION_3_2)
#define GLAD_GL_VERSION_3_3 (glad_gl_context.VERSION_3_3)
#define GLAD_GL_ES_VERSION_2_0 (glad_gl_context.ES_VERSION_2_0)
#define GLAD_GL_ES_VERSION_3_0 (glad_gl_context.ES_VERSION_3_0)
#define GLAD_GL_ES_VERSION_3_1 (glad_gl_context.ES_VERSION_3_1)
#define GLAD_GL_ES_VERSION_3_2 (glad_gl_context.ES_VERSION_3_2)
#define GLAD_GL_VERSION_ES_CM_1_0 (glad_gl_context.VERSION_ES_CM_1_0)

#define glActiveTexture (glad_gl_context.ActiveTexture)
#define glBindBuffer (glad_gl_context.BindBuffer)
#define glBindFramebuffer (glad_gl_context.BindFramebuffer)
#define glBindRenderbuffer (glad_gl_context.BindRenderbuffer)
#define glBindTexture (glad_gl_context.BindTexture)
#define glBlendColor (glad_gl_context.BlendColor)
#define glBlendEquation (glad_gl_context.BlendEquation)
#define glBlendEquationSeparate (glad_gl_context.BlendEquationSeparate)
#define glBlendFunc (glad_gl_context.BlendFunc)
#define glBlendFuncSeparate (glad_gl_context.BlendFuncSeparate)
#define glBufferData (glad_gl_context.BufferData)
#define glBufferSubData (glad_gl_context.BufferSubData)
#define glCheckFramebufferStatus (glad_gl_context.CheckFramebufferStatus)
#define glClear (glad_gl_context.Clear)
#define glClearColor (glad_gl_context.ClearColor)
#define glClearDepthf (glad_gl_context.ClearDepthf)
#define glClearStencil (glad_gl_context.ClearStencil)
#define glColorMask (glad_gl_context.ColorMask)
#define glCompressedTexSubImage2D (glad_gl_context.CompressedTexSubImage2D)
#define glCreateProgram (glad_gl_context.CreateProgram)
#define glCullFace (glad_gl_context.CullFace)
#define glDepthFunc (glad_gl_context.DepthFunc)
#define glDepthMask (glad_gl_context.DepthMask)
#define glDepthRangef (glad_gl_context.DepthRangef)
#define glDisable (glad_gl_context.Disable)
#define glDisableVertexAttribArray (glad_gl_context.DisableVertexAttribArray)
#define glDrawArrays (glad_gl_context.DrawArrays)
#define glDrawRangeElements (glad_gl_context.DrawRangeElements)
#define glEnable (glad_gl_context.Enable)
#define glEnableVertexAttribArray (glad_gl_context.EnableVertexAttribArray)
#define glFinish (glad_gl_context.Finish)
#define glFlush (glad_gl_context.Flush)
#define glFramebufferRenderbuffer (glad_gl_context.FramebufferRenderbuffer)
#define glFramebufferTexture2D (glad_gl_context.FramebufferTexture2D)
#define glFrontFace (glad_gl_context.FrontFace)
#define glGenBuffers (glad_gl_context.GenBuffers)
#define glGenFramebuffers (glad_gl_context.GenFramebuffers)
#define glGenRenderbuffers (glad_gl_context.GenRenderbuffers)
#define glGenTextures (glad_gl_context.GenTextures)
#define glGenerateMipmap (glad_gl_context.GenerateMipmap)
#define glGetAttribLocation (glad_gl_context.GetAttribLocation)
#define glGetBooleanv (glad_gl_context.GetBooleanv)
#define glGetBufferParameteriv (glad_gl_context.GetBufferParameteriv)
#define glGetError (glad_gl_context.GetError)
#define glGetFloatv (glad_gl_context.GetFloatv)
#define glGetFramebufferAttachmentParameteriv (glad_gl_context.GetFramebufferAttachmentParameteriv)
#define glGetGraphicsResetStatus (glad_gl_context.GetGraphicsResetStatus)
#define glGetIntegerv (glad_gl_context.GetIntegerv)
#define glGetProgramiv (glad_gl_context.GetProgramiv)
#define glGetRenderbufferParameteriv (glad_gl_context.GetRenderbufferParameteriv)
#define glGetString (glad_gl_context.GetString)
#define glGetTexParameterfv (glad_gl_context.GetTexParameterfv)
#define glGetTexParameteriv (glad_gl_context.GetTexParameteriv)
#define glGetUniformLocation (glad_gl_context.GetUniformLocation)
#define glGetVertexAttribPointerv (glad_gl_context.GetVertexAttribPointerv)
#define glGetVertexAttribfv (glad_gl_context.GetVertexAttribfv)
#define glGetVertexAttribiv (glad_gl_context.GetVertexAttribiv)
#define glGetnUniformfv (glad_gl_context.GetnUniformfv)
#define glGetnUniformiv (glad_gl_context.GetnUniformiv)
#define glHint (glad_gl_context.Hint)
#define glIsEnabled (glad_gl_context.IsEnabled)
#define glLineWidth (glad_gl_context.LineWidth)
#define glPixelStorei (glad_gl_context.PixelStorei)
#define glPolygonOffset (glad_gl_context.PolygonOffset)
#define glProgramBinary (glad_gl_context.ProgramBinary)
#define glReadnPixels (glad_gl_context.ReadnPixels)
#define glRenderbufferStorage (glad_gl_context.RenderbufferStorage)
#define glSampleCoverage (glad_gl_context.SampleCoverage)
#define glScissor (glad_gl_context.Scissor)
#define glStencilFunc (glad_gl_context.StencilFunc)
#define glStencilFuncSeparate (glad_gl_context.StencilFuncSeparate)
#define glStencilMask (glad_gl_context.StencilMask)
#define glStencilMaskSeparate (glad_gl_context.StencilMaskSeparate)
#define glStencilOp (glad_gl_context.StencilOp)
#define glStencilOpSeparate (glad_gl_context.StencilOpSeparate)
#define glTexParameterf (glad_gl_context.TexParameterf)
#define glTexParameterfv (glad_gl_context.TexParameterfv)
#define glTexParameteri (glad_gl_context.TexParameteri)
#define glTexParameteriv (glad_gl_context.TexParameteriv)
#define glTexStorage2D (glad_gl_context.TexStorage2D)
#define glTexSubImage2D (glad_gl_context.TexSubImage2D)
#define glUniform1f (glad_gl_context.Uniform1f)
#define glUniform1fv (glad_gl_context.Uniform1fv)
#define glUniform1i (glad_gl_context.Uniform1i)
#define glUniform1iv (glad_gl_context.Uniform1iv)
#define glUniform2f (glad_gl_context.Uniform2f)
#define glUniform2fv (glad_gl_context.Uniform2fv)
#define glUniform2i (glad_gl_context.Uniform2i)
#define glUniform2iv (glad_gl_context.Uniform2iv)
#define glUniform3f (glad_gl_context.Uniform3f)
#define glUniform3fv (glad_gl_context.Uniform3fv)
#define glUniform3i (glad_gl_context.Uniform3i)
#define glUniform3iv (glad_gl_context.Uniform3iv)
#define glUniform4f (glad_gl_context.Uniform4f)
#define glUniform4fv (glad_gl_context.Uniform4fv)
#define glUniform4i (glad_gl_context.Uniform4i)
#define glUniform4iv (glad_gl_context.Uniform4iv)
#define glUniformMatrix2fv (glad_gl_context.UniformMatrix2fv)
#define glUniformMatrix3fv (glad_gl_context.UniformMatrix3fv)
#define glUniformMatrix4fv (glad_gl_context.UniformMatrix4fv)
#define glUseProgram (glad_gl_context.UseProgram)
#define glVertexAttrib1f (glad_gl_context.VertexAttrib1f)
#define glVertexAttrib1fv (glad_gl_context.VertexAttrib1fv)
#define glVertexAttrib2f (glad_gl_context.VertexAttrib2f)
#define glVertexAttrib2fv (glad_gl_context.VertexAttrib2fv)
#define glVertexAttrib3f (glad_gl_context.VertexAttrib3f)
#define glVertexAttrib3fv (glad_gl_context.VertexAttrib3fv)
#define glVertexAttrib4f (glad_gl_context.VertexAttrib4f)
#define glVertexAttrib4fv (glad_gl_context.VertexAttrib4fv)
#define glVertexAttribPointer (glad_gl_context.VertexAttribPointer)
#define glViewport (glad_gl_context.Viewport)
#define glAccum (glad_gl_context.Accum)
#define glAlphaFunc (glad_gl_context.AlphaFunc)
#define glAreTexturesResident (glad_gl_context.AreTexturesResident)
#define glArrayElement (glad_gl_context.ArrayElement)
#define glAttachShader (glad_gl_context.AttachShader)
#define glBegin (glad_gl_context.Begin)
#define glBeginConditionalRender (glad_gl_context.BeginConditionalRender)
#define glBeginQuery (glad_gl_context.BeginQuery)
#define glBeginTransformFeedback (glad_gl_context.BeginTransformFeedback)
#define glBindAttribLocation (glad_gl_context.BindAttribLocation)
#define glBindBufferBase (glad_gl_context.BindBufferBase)
#define glBindBufferRange (glad_gl_context.BindBufferRange)
#define glBindFragDataLocation (glad_gl_context.BindFragDataLocation)
#define glBindFragDataLocationIndexed (glad_gl_context.BindFragDataLocationIndexed)
#define glBindSampler (glad_gl_context.BindSampler)
#define glBindVertexArray (glad_gl_context.BindVertexArray)
#define glBitmap (glad_gl_context.Bitmap)
#define glBlitFramebuffer (glad_gl_context.BlitFramebuffer)
#define glCallList (glad_gl_context.CallList)
#define glCallLists (glad_gl_context.CallLists)
#define glClampColor (glad_gl_context.ClampColor)
#define glClearAccum (glad_gl_context.ClearAccum)
#define glClearBufferfi (glad_gl_context.ClearBufferfi)
#define glClearBufferfv (glad_gl_context.ClearBufferfv)
#define glClearBufferiv (glad_gl_context.ClearBufferiv)
#define glClearBufferuiv (glad_gl_context.ClearBufferuiv)
#define glClearDepth (glad_gl_context.ClearDepth)
#define glClearIndex (glad_gl_context.ClearIndex)
#define glClientActiveTexture (glad_gl_context.ClientActiveTexture)
#define glClientWaitSync (glad_gl_context.ClientWaitSync)
#define glClipPlane (glad_gl_context.ClipPlane)
#define glColor3b (glad_gl_context.Color3b)
#define glColor3bv (glad_gl_context.Color3bv)
#define glColor3d (glad_gl_context.Color3d)
#define glColor3dv (glad_gl_context.Color3dv)
#define glColor3f (glad_gl_context.Color3f)
#define glColor3fv (glad_gl_context.Color3fv)
#define glColor3i (glad_gl_context.Color3i)
#define glColor3iv (glad_gl_context.Color3iv)
#define glColor3s (glad_gl_context.Color3s)
#define glColor3sv (glad_gl_context.Color3sv)
#define glColor3ub (glad_gl_context.Color3ub)
#define glColor3ubv (glad_gl_context.Color3ubv)
#define glColor3ui (glad_gl_context.Color3ui)
#define glColor3uiv (glad_gl_context.Color3uiv)
#define glColor3us (glad_gl_context.Color3us)
#define glColor3usv (glad_gl_context.Color3usv)
#define glColor4b (glad_gl_context.Color4b)
#define glColor4bv (glad_gl_context.Color4bv)
#define glColor4d (glad_gl_context.Color4d)
#define glColor4dv (glad_gl_context.Color4dv)
#define glColor4f (glad_gl_context.Color4f)
#define glColor4fv (glad_gl_context.Color4fv)
#define glColor4i (glad_gl_context.Color4i)
#define glColor4iv (glad_gl_context.Color4iv)
#define glColor4s (glad_gl_context.Color4s)
#define glColor4sv (glad_gl_context.Color4sv)
#define glColor4ub (glad_gl_context.Color4ub)
#define glColor4ubv (glad_gl_context.Color4ubv)
#define glColor4ui (glad_gl_context.Color4ui)
#define glColor4uiv (glad_gl_context.Color4uiv)
#define glColor4us (glad_gl_context.Color4us)
#define glColor4usv (glad_gl_context.Color4usv)
#define glColorMaski (glad_gl_context.ColorMaski)
#define glColorMaterial (glad_gl_context.ColorMaterial)
#define glColorP3ui (glad_gl_context.ColorP3ui)
#define glColorP3uiv (glad_gl_context.ColorP3uiv)
#define glColorP4ui (glad_gl_context.ColorP4ui)
#define glColorP4uiv (glad_gl_context.ColorP4uiv)
#define glColorPointer (glad_gl_context.ColorPointer)
#define glCompileShader (glad_gl_context.CompileShader)
#define glCompressedTexImage1D (glad_gl_context.CompressedTexImage1D)
#define glCompressedTexImage2D (glad_gl_context.CompressedTexImage2D)
#define glCompressedTexImage3D (glad_gl_context.CompressedTexImage3D)
#define glCompressedTexSubImage1D (glad_gl_context.CompressedTexSubImage1D)
#define glCompressedTexSubImage3D (glad_gl_context.CompressedTexSubImage3D)
#define glCopyBufferSubData (glad_gl_context.CopyBufferSubData)
#define glCopyPixels (glad_gl_context.CopyPixels)
#define glCopyTexImage1D (glad_gl_context.CopyTexImage1D)
#define glCopyTexImage2D (glad_gl_context.CopyTexImage2D)
#define glCopyTexSubImage1D (glad_gl_context.CopyTexSubImage1D)
#define glCopyTexSubImage2D (glad_gl_context.CopyTexSubImage2D)
#define glCopyTexSubImage3D (glad_gl_context.CopyTexSubImage3D)
#define glCreateShader (glad_gl_context.CreateShader)
#define glDeleteBuffers (glad_gl_context.DeleteBuffers)
#define glDeleteFramebuffers (glad_gl_context.DeleteFramebuffers)
#define glDeleteLists (glad_gl_context.DeleteLists)
#define glDeleteProgram (glad_gl_context.DeleteProgram)
#define glDeleteQueries (glad_gl_context.DeleteQueries)
#define glDeleteRenderbuffers (glad_gl_context.DeleteRenderbuffers)
#define glDeleteSamplers (glad_gl_context.DeleteSamplers)
#define glDeleteShader (glad_gl_context.DeleteShader)
#define glDeleteSync (glad_gl_context.DeleteSync)
#define glDeleteTextures (glad_gl_context.DeleteTextures)
#define glDeleteVertexArrays (glad_gl_context.DeleteVertexArrays)
#define glDepthRange (glad_gl_context.DepthRange)
#define glDetachShader (glad_gl_context.DetachShader)
#define glDisableClientState (glad_gl_context.DisableClientState)
#define glDisablei (glad_gl_context.Disablei)
#define glDrawArraysInstanced (glad_gl_context.DrawArraysInstanced)
#define glDrawBuffer (glad_gl_context.DrawBuffer)
#define glDrawBuffers (glad_gl_context.DrawBuffers)
#define glDrawElements (glad_gl_context.DrawElements)
#define glDrawElementsBaseVertex (glad_gl_context.DrawElementsBaseVertex)
#define glDrawElementsInstanced (glad_gl_context.DrawElementsInstanced)
#define glDrawElementsInstancedBaseVertex (glad_gl_context.DrawElementsInstancedBaseVertex)
#define glDrawPixels (glad_gl_context.DrawPixels)
#define glDrawRangeElementsBaseVertex (glad_gl_context.DrawRangeElementsBaseVertex)
#define glEdgeFlag (glad_gl_context.EdgeFlag)
#define glEdgeFlagPointer (glad_gl_context.EdgeFlagPointer)
#define glEdgeFlagv (glad_gl_context.EdgeFlagv)
#define glEnableClientState (glad_gl_context.EnableClientState)
#define glEnablei (glad_gl_context.Enablei)
#define glEnd (glad_gl_context.End)
#define glEndConditionalRender (glad_gl_context.EndConditionalRender)
#define glEndList (glad_gl_context.EndList)
#define glEndQuery (glad_gl_context.EndQuery)
#define glEndTransformFeedback (glad_gl_context.EndTransformFeedback)
#define glEvalCoord1d (glad_gl_context.EvalCoord1d)
#define glEvalCoord1dv (glad_gl_context.EvalCoord1dv)
#define glEvalCoord1f (glad_gl_context.EvalCoord1f)
#define glEvalCoord1fv (glad_gl_context.EvalCoord1fv)
#define glEvalCoord2d (glad_gl_context.EvalCoord2d)
#define glEvalCoord2dv (glad_gl_context.EvalCoord2dv)
#define glEvalCoord2f (glad_gl_context.EvalCoord2f)
#define glEvalCoord2fv (glad_gl_context.EvalCoord2fv)
#define glEvalMesh1 (glad_gl_context.EvalMesh1)
#define glEvalMesh2 (glad_gl_context.EvalMesh2)
#define glEvalPoint1 (glad_gl_context.EvalPoint1)
#define glEvalPoint2 (glad_gl_context.EvalPoint2)
#define glFeedbackBuffer (glad_gl_context.FeedbackBuffer)
#define glFenceSync (glad_gl_context.FenceSync)
#define glFlushMappedBufferRange (glad_gl_context.FlushMappedBufferRange)
#define glFogCoordPointer (glad_gl_context.FogCoordPointer)
#define glFogCoordd (glad_gl_context.FogCoordd)
#define glFogCoorddv (glad_gl_context.FogCoorddv)
#define glFogCoordf (glad_gl_context.FogCoordf)
#define glFogCoordfv (glad_gl_context.FogCoordfv)
#define glFogf (glad_gl_context.Fogf)
#define glFogfv (glad_gl_context.Fogfv)
#define glFogi (glad_gl_context.Fogi)
#define glFogiv (glad_gl_context.Fogiv)
#define glFramebufferTexture (glad_gl_context.FramebufferTexture)
#define glFramebufferTexture1D (glad_gl_context.FramebufferTexture1D)
#define glFramebufferTexture3D (glad_gl_context.FramebufferTexture3D)
#define glFramebufferTextureLayer (glad_gl_context.FramebufferTextureLayer)
#define glFrustum (glad_gl_context.Frustum)
#define glGenLists (glad_gl_context.GenLists)
#define glGenQueries (glad_gl_context.GenQueries)
#define glGenSamplers (glad_gl_context.GenSamplers)
#define glGenVertexArrays (glad_gl_context.GenVertexArrays)
#define glGetActiveAttrib (glad_gl_context.GetActiveAttrib)
#define glGetActiveUniform (glad_gl_context.GetActiveUniform)
#define glGetActiveUniformBlockName (glad_gl_context.GetActiveUniformBlockName)
#define glGetActiveUniformBlockiv (glad_gl_context.GetActiveUniformBlockiv)
#define glGetActiveUniformName (glad_gl_context.GetActiveUniformName)
#define glGetActiveUniformsiv (glad_gl_context.GetActiveUniformsiv)
#define glGetAttachedShaders (glad_gl_context.GetAttachedShaders)
#define glGetBooleani_v (glad_gl_context.GetBooleani_v)
#define glGetBufferParameteri64v (glad_gl_context.GetBufferParameteri64v)
#define glGetBufferPointerv (glad_gl_context.GetBufferPointerv)
#define glGetBufferSubData (glad_gl_context.GetBufferSubData)
#define glGetClipPlane (glad_gl_context.GetClipPlane)
#define glGetCompressedTexImage (glad_gl_context.GetCompressedTexImage)
#define glGetDoublev (glad_gl_context.GetDoublev)
#define glGetFragDataIndex (glad_gl_context.GetFragDataIndex)
#define glGetFragDataLocation (glad_gl_context.GetFragDataLocation)
#define glGetInteger64i_v (glad_gl_context.GetInteger64i_v)
#define glGetInteger64v (glad_gl_context.GetInteger64v)
#define glGetIntegeri_v (glad_gl_context.GetIntegeri_v)
#define glGetLightfv (glad_gl_context.GetLightfv)
#define glGetLightiv (glad_gl_context.GetLightiv)
#define glGetMapdv (glad_gl_context.GetMapdv)
#define glGetMapfv (glad_gl_context.GetMapfv)
#define glGetMapiv (glad_gl_context.GetMapiv)
#define glGetMaterialfv (glad_gl_context.GetMaterialfv)
#define glGetMaterialiv (glad_gl_context.GetMaterialiv)
#define glGetMultisamplefv (glad_gl_context.GetMultisamplefv)
#define glGetPixelMapfv (glad_gl_context.GetPixelMapfv)
#define glGetPixelMapuiv (glad_gl_context.GetPixelMapuiv)
#define glGetPixelMapusv (glad_gl_context.GetPixelMapusv)
#define glGetPointerv (glad_gl_context.GetPointerv)
#define glGetPolygonStipple (glad_gl_context.GetPolygonStipple)
#define glGetProgramInfoLog (glad_gl_context.GetProgramInfoLog)
#define glGetQueryObjecti64v (glad_gl_context.GetQueryObjecti64v)
#define glGetQueryObjectiv (glad_gl_context.GetQueryObjectiv)
#define glGetQueryObjectui64v (glad_gl_context.GetQueryObjectui64v)
#define glGetQueryObjectuiv (glad_gl_context.GetQueryObjectuiv)
#define glGetQueryiv (glad_gl_context.GetQueryiv)
#define glGetSamplerParameterIiv (glad_gl_context.GetSamplerParameterIiv)
#define glGetSamplerParameterIuiv (glad_gl_context.GetSamplerParameterIuiv)
#define glGetSamplerParameterfv (glad_gl_context.GetSamplerParameterfv)
#define glGetSamplerParameteriv (glad_gl_context.GetSamplerParameteriv)
#define glGetShaderInfoLog (glad_gl_context.GetShaderInfoLog)
#define glGetShaderSource (glad_gl_context.GetShaderSource)
#define glGetShaderiv (glad_gl_context.GetShaderiv)
#define glGetStringi (glad_gl_context.GetStringi)
#define glGetSynciv (glad_gl_context.GetSynciv)
#define glGetTexEnvfv (glad_gl_context.GetTexEnvfv)
#define glGetTexEnviv (glad_gl_context.GetTexEnviv)
#define glGetTexGendv (glad_gl_context.GetTexGendv)
#define glGetTexGenfv (glad_gl_context.GetTexGenfv)
#define glGetTexGeniv (glad_gl_context.GetTexGeniv)
#define glGetTexImage (glad_gl_context.GetTexImage)
#define glGetTexLevelParameterfv (glad_gl_context.GetTexLevelParameterfv)
#define glGetTexLevelParameteriv (glad_gl_context.GetTexLevelParameteriv)
#define glGetTexParameterIiv (glad_gl_context.GetTexParameterIiv)
#define glGetTexParameterIuiv (glad_gl_context.GetTexParameterIuiv)
#define glGetTransformFeedbackVarying (glad_gl_context.GetTransformFeedbackVarying)
#define glGetUniformBlockIndex (glad_gl_context.GetUniformBlockIndex)
#define glGetUniformIndices (glad_gl_context.GetUniformIndices)
#define glGetUniformfv (glad_gl_context.GetUniformfv)
#define glGetUniformiv (glad_gl_context.GetUniformiv)
#define glGetUniformuiv (glad_gl_context.GetUniformuiv)
#define glGetVertexAttribIiv (glad_gl_context.GetVertexAttribIiv)
#define glGetVertexAttribIuiv (glad_gl_context.GetVertexAttribIuiv)
#define glGetVertexAttribdv (glad_gl_context.GetVertexAttribdv)
#define glIndexMask (glad_gl_context.IndexMask)
#define glIndexPointer (glad_gl_context.IndexPointer)
#define glIndexd (glad_gl_context.Indexd)
#define glIndexdv (glad_gl_context.Indexdv)
#define glIndexf (glad_gl_context.Indexf)
#define glIndexfv (glad_gl_context.Indexfv)
#define glIndexi (glad_gl_context.Indexi)
#define glIndexiv (glad_gl_context.Indexiv)
#define glIndexs (glad_gl_context.Indexs)
#define glIndexsv (glad_gl_context.Indexsv)
#define glIndexub (glad_gl_context.Indexub)
#define glIndexubv (glad_gl_context.Indexubv)
#define glInitNames (glad_gl_context.InitNames)
#define glInterleavedArrays (glad_gl_context.InterleavedArrays)
#define glIsBuffer (glad_gl_context.IsBuffer)
#define glIsEnabledi (glad_gl_context.IsEnabledi)
#define glIsFramebuffer (glad_gl_context.IsFramebuffer)
#define glIsList (glad_gl_context.IsList)
#define glIsProgram (glad_gl_context.IsProgram)
#define glIsQuery (glad_gl_context.IsQuery)
#define glIsRenderbuffer (glad_gl_context.IsRenderbuffer)
#define glIsSampler (glad_gl_context.IsSampler)
#define glIsShader (glad_gl_context.IsShader)
#define glIsSync (glad_gl_context.IsSync)
#define glIsTexture (glad_gl_context.IsTexture)
#define glIsVertexArray (glad_gl_context.IsVertexArray)
#define glLightModelf (glad_gl_context.LightModelf)
#define glLightModelfv (glad_gl_context.LightModelfv)
#define glLightModeli (glad_gl_context.LightModeli)
#define glLightModeliv (glad_gl_context.LightModeliv)
#define glLightf (glad_gl_context.Lightf)
#define glLightfv (glad_gl_context.Lightfv)
#define glLighti (glad_gl_context.Lighti)
#define glLightiv (glad_gl_context.Lightiv)
#define glLineStipple (glad_gl_context.LineStipple)
#define glLinkProgram (glad_gl_context.LinkProgram)
#define glListBase (glad_gl_context.ListBase)
#define glLoadIdentity (glad_gl_context.LoadIdentity)
#define glLoadMatrixd (glad_gl_context.LoadMatrixd)
#define glLoadMatrixf (glad_gl_context.LoadMatrixf)
#define glLoadName (glad_gl_context.LoadName)
#define glLoadTransposeMatrixd (glad_gl_context.LoadTransposeMatrixd)
#define glLoadTransposeMatrixf (glad_gl_context.LoadTransposeMatrixf)
#define glLogicOp (glad_gl_context.LogicOp)
#define glMap1d (glad_gl_context.Map1d)
#define glMap1f (glad_gl_context.Map1f)
#define glMap2d (glad_gl_context.Map2d)
#define glMap2f (glad_gl_context.Map2f)
#define glMapBuffer (glad_gl_context.MapBuffer)
#define glMapBufferRange (glad_gl_context.MapBufferRange)
#define glMapGrid1d (glad_gl_context.MapGrid1d)
#define glMapGrid1f (glad_gl_context.MapGrid1f)
#define glMapGrid2d (glad_gl_context.MapGrid2d)
#define glMapGrid2f (glad_gl_context.MapGrid2f)
#define glMaterialf (glad_gl_context.Materialf)
#define glMaterialfv (glad_gl_context.Materialfv)
#define glMateriali (glad_gl_context.Materiali)
#define glMaterialiv (glad_gl_context.Materialiv)
#define glMatrixMode (glad_gl_context.MatrixMode)
#define glMultMatrixd (glad_gl_context.MultMatrixd)
#define glMultMatrixf (glad_gl_context.MultMatrixf)
#define glMultTransposeMatrixd (glad_gl_context.MultTransposeMatrixd)
#define glMultTransposeMatrixf (glad_gl_context.MultTransposeMatrixf)
#define glMultiDrawArrays (glad_gl_context.MultiDrawArrays)
#define glMultiDrawElements (glad_gl_context.MultiDrawElements)
#define glMultiDrawElementsBaseVertex (glad_gl_context.MultiDrawElementsBaseVertex)
#define glMultiTexCoord1d (glad_gl_context.MultiTexCoord1d)
#define glMultiTexCoord1dv (glad_gl_context.MultiTexCoord1dv)
#define glMultiTexCoord1f (glad_gl_context.MultiTexCoord1f)
#define glMultiTexCoord1fv (glad_gl_context.MultiTexCoord1fv)
#define glMultiTexCoord1i (glad_gl_context.MultiTexCoord1i)
#define glMultiTexCoord1iv (glad_gl_context.MultiTexCoord1iv)
#define glMultiTexCoord1s (glad_gl_context.MultiTexCoord1s)
#define glMultiTexCoord1sv (glad_gl_context.MultiTexCoord1sv)
#define glMultiTexCoord2d (glad_gl_context.MultiTexCoord2d)
#define glMultiTexCoord2dv (glad_gl_context.MultiTexCoord2dv)
#define glMultiTexCoord2f (glad_gl_context.MultiTexCoord2f)
#define glMultiTexCoord2fv (glad_gl_context.MultiTexCoord2fv)
#define glMultiTexCoord2i (glad_gl_context.MultiTexCoord2i)
#define glMultiTexCoord2iv (glad_gl_context.MultiTexCoord2iv)
#define glMultiTexCoord2s (glad_gl_context.MultiTexCoord2s)
#define glMultiTexCoord2sv (glad_gl_context.MultiTexCoord2sv)
#define glMultiTexCoord3d (glad_gl_context.MultiTexCoord3d)
#define glMultiTexCoord3dv (glad_gl_context.MultiTexCoord3dv)
#define glMultiTexCoord3f (glad_gl_context.MultiTexCoord3f)
#define glMultiTexCoord3fv (glad_gl_context.MultiTexCoord3fv)
#define glMultiTexCoord3i (glad_gl_context.MultiTexCoord3i)
#define glMultiTexCoord3iv (glad_gl_context.MultiTexCoord3iv)
#define glMultiTexCoord3s (glad_gl_context.MultiTexCoord3s)
#define glMultiTexCoord3sv (glad_gl_context.MultiTexCoord3sv)
#define glMultiTexCoord4d (glad_gl_context.MultiTexCoord4d)
#define glMultiTexCoord4dv (glad_gl_context.MultiTexCoord4dv)
#define glMultiTexCoord4f (glad_gl_context.MultiTexCoord4f)
#define glMultiTexCoord4fv (glad_gl_context.MultiTexCoord4fv)
#define glMultiTexCoord4i (glad_gl_context.MultiTexCoord4i)
#define glMultiTexCoord4iv (glad_gl_context.MultiTexCoord4iv)
#define glMultiTexCoord4s (glad_gl_context.MultiTexCoord4s)
#define glMultiTexCoord4sv (glad_gl_context.MultiTexCoord4sv)
#define glMultiTexCoordP1ui (glad_gl_context.MultiTexCoordP1ui)
#define glMultiTexCoordP1uiv (glad_gl_context.MultiTexCoordP1uiv)
#define glMultiTexCoordP2ui (glad_gl_context.MultiTexCoordP2ui)
#define glMultiTexCoordP2uiv (glad_gl_context.MultiTexCoordP2uiv)
#define glMultiTexCoordP3ui (glad_gl_context.MultiTexCoordP3ui)
#define glMultiTexCoordP3uiv (glad_gl_context.MultiTexCoordP3uiv)
#define glMultiTexCoordP4ui (glad_gl_context.MultiTexCoordP4ui)
#define glMultiTexCoordP4uiv (glad_gl_context.MultiTexCoordP4uiv)
#define glNewList (glad_gl_context.NewList)
#define glNormal3b (glad_gl_context.Normal3b)
#define glNormal3bv (glad_gl_context.Normal3bv)
#define glNormal3d (glad_gl_context.Normal3d)
#define glNormal3dv (glad_gl_context.Normal3dv)
#define glNormal3f (glad_gl_context.Normal3f)
#define glNormal3fv (glad_gl_context.Normal3fv)
#define glNormal3i (glad_gl_context.Normal3i)
#define glNormal3iv (glad_gl_context.Normal3iv)
#define glNormal3s (glad_gl_context.Normal3s)
#define glNormal3sv (glad_gl_context.Normal3sv)
#define glNormalP3ui (glad_gl_context.NormalP3ui)
#define glNormalP3uiv (glad_gl_context.NormalP3uiv)
#define glNormalPointer (glad_gl_context.NormalPointer)
#define glOrtho (glad_gl_context.Ortho)
#define glPassThrough (glad_gl_context.PassThrough)
#define glPixelMapfv (glad_gl_context.PixelMapfv)
#define glPixelMapuiv (glad_gl_context.PixelMapuiv)
#define glPixelMapusv (glad_gl_context.PixelMapusv)
#define glPixelStoref (glad_gl_context.PixelStoref)
#define glPixelTransferf (glad_gl_context.PixelTransferf)
#define glPixelTransferi (glad_gl_context.PixelTransferi)
#define glPixelZoom (glad_gl_context.PixelZoom)
#define glPointParameterf (glad_gl_context.PointParameterf)
#define glPointParameterfv (glad_gl_context.PointParameterfv)
#define glPointParameteri (glad_gl_context.PointParameteri)
#define glPointParameteriv (glad_gl_context.PointParameteriv)
#define glPointSize (glad_gl_context.PointSize)
#define glPolygonMode (glad_gl_context.PolygonMode)
#define glPolygonStipple (glad_gl_context.PolygonStipple)
#define glPopAttrib (glad_gl_context.PopAttrib)
#define glPopClientAttrib (glad_gl_context.PopClientAttrib)
#define glPopMatrix (glad_gl_context.PopMatrix)
#define glPopName (glad_gl_context.PopName)
#define glPrimitiveRestartIndex (glad_gl_context.PrimitiveRestartIndex)
#define glPrioritizeTextures (glad_gl_context.PrioritizeTextures)
#define glProvokingVertex (glad_gl_context.ProvokingVertex)
#define glPushAttrib (glad_gl_context.PushAttrib)
#define glPushClientAttrib (glad_gl_context.PushClientAttrib)
#define glPushMatrix (glad_gl_context.PushMatrix)
#define glPushName (glad_gl_context.PushName)
#define glQueryCounter (glad_gl_context.QueryCounter)
#define glRasterPos2d (glad_gl_context.RasterPos2d)
#define glRasterPos2dv (glad_gl_context.RasterPos2dv)
#define glRasterPos2f (glad_gl_context.RasterPos2f)
#define glRasterPos2fv (glad_gl_context.RasterPos2fv)
#define glRasterPos2i (glad_gl_context.RasterPos2i)
#define glRasterPos2iv (glad_gl_context.RasterPos2iv)
#define glRasterPos2s (glad_gl_context.RasterPos2s)
#define glRasterPos2sv (glad_gl_context.RasterPos2sv)
#define glRasterPos3d (glad_gl_context.RasterPos3d)
#define glRasterPos3dv (glad_gl_context.RasterPos3dv)
#define glRasterPos3f (glad_gl_context.RasterPos3f)
#define glRasterPos3fv (glad_gl_context.RasterPos3fv)
#define glRasterPos3i (glad_gl_context.RasterPos3i)
#define glRasterPos3iv (glad_gl_context.RasterPos3iv)
#define glRasterPos3s (glad_gl_context.RasterPos3s)
#define glRasterPos3sv (glad_gl_context.RasterPos3sv)
#define glRasterPos4d (glad_gl_context.RasterPos4d)
#define glRasterPos4dv (glad_gl_context.RasterPos4dv)
#define glRasterPos4f (glad_gl_context.RasterPos4f)
#define glRasterPos4fv (glad_gl_context.RasterPos4fv)
#define glRasterPos4i (glad_gl_context.RasterPos4i)
#define glRasterPos4iv (glad_gl_context.RasterPos4iv)
#define glRasterPos4s (glad_gl_context.RasterPos4s)
#define glRasterPos4sv (glad_gl_context.RasterPos4sv)
#define glReadBuffer (glad_gl_context.ReadBuffer)
#define glReadPixels (glad_gl_context.ReadPixels)
#define glRectd (glad_gl_context.Rectd)
#define glRectdv (glad_gl_context.Rectdv)
#define glRectf (glad_gl_context.Rectf)
#define glRectfv (glad_gl_context.Rectfv)
#define glRecti (glad_gl_context.Recti)
#define glRectiv (glad_gl_context.Rectiv)
#define glRects (glad_gl_context.Rects)
#define glRectsv (glad_gl_context.Rectsv)
#define glRenderMode (glad_gl_context.RenderMode)
#define glRenderbufferStorageMultisample (glad_gl_context.RenderbufferStorageMultisample)
#define glRotated (glad_gl_context.Rotated)
#define glRotatef (glad_gl_context.Rotatef)
#define glSampleMaski (glad_gl_context.SampleMaski)
#define glSamplerParameterIiv (glad_gl_context.SamplerParameterIiv)
#define glSamplerParameterIuiv (glad_gl_context.SamplerParameterIuiv)
#define glSamplerParameterf (glad_gl_context.SamplerParameterf)
#define glSamplerParameterfv (glad_gl_context.SamplerParameterfv)
#define glSamplerParameteri (glad_gl_context.SamplerParameteri)
#define glSamplerParameteriv (glad_gl_context.SamplerParameteriv)
#define glScaled (glad_gl_context.Scaled)
#define glScalef (glad_gl_context.Scalef)
#define glSecondaryColor3b (glad_gl_context.SecondaryColor3b)
#define glSecondaryColor3bv (glad_gl_context.SecondaryColor3bv)
#define glSecondaryColor3d (glad_gl_context.SecondaryColor3d)
#define glSecondaryColor3dv (glad_gl_context.SecondaryColor3dv)
#define glSecondaryColor3f (glad_gl_context.SecondaryColor3f)
#define glSecondaryColor3fv (glad_gl_context.SecondaryColor3fv)
#define glSecondaryColor3i (glad_gl_context.SecondaryColor3i)
#define glSecondaryColor3iv (glad_gl_context.SecondaryColor3iv)
#define glSecondaryColor3s (glad_gl_context.SecondaryColor3s)
#define glSecondaryColor3sv (glad_gl_context.SecondaryColor3sv)
#define glSecondaryColor3ub (glad_gl_context.SecondaryColor3ub)
#define glSecondaryColor3ubv (glad_gl_context.SecondaryColor3ubv)
#define glSecondaryColor3ui (glad_gl_context.SecondaryColor3ui)
#define glSecondaryColor3uiv (glad_gl_context.SecondaryColor3uiv)
#define glSecondaryColor3us (glad_gl_context.SecondaryColor3us)
#define glSecondaryColor3usv (glad_gl_context.SecondaryColor3usv)
#define glSecondaryColorP3ui (glad_gl_context.SecondaryColorP3ui)
#define glSecondaryColorP3uiv (glad_gl_context.SecondaryColorP3uiv)
#define glSecondaryColorPointer (glad_gl_context.SecondaryColorPointer)
#define glSelectBuffer (glad_gl_context.SelectBuffer)
#define glShadeModel (glad_gl_context.ShadeModel)
#define glShaderSource (glad_gl_context.ShaderSource)
#define glTexBuffer (glad_gl_context.TexBuffer)
#define glTexCoord1d (glad_gl_context.TexCoord1d)
#define glTexCoord1dv (glad_gl_context.TexCoord1dv)
#define glTexCoord1f (glad_gl_context.TexCoord1f)
#define glTexCoord1fv (glad_gl_context.TexCoord1fv)
#define glTexCoord1i (glad_gl_context.TexCoord1i)
#define glTexCoord1iv (glad_gl_context.TexCoord1iv)
#define glTexCoord1s (glad_gl_context.TexCoord1s)
#define glTexCoord1sv (glad_gl_context.TexCoord1sv)
#define glTexCoord2d (glad_gl_context.TexCoord2d)
#define glTexCoord2dv (glad_gl_context.TexCoord2dv)
#define glTexCoord2f (glad_gl_context.TexCoord2f)
#define glTexCoord2fv (glad_gl_context.TexCoord2fv)
#define glTexCoord2i (glad_gl_context.TexCoord2i)
#define glTexCoord2iv (glad_gl_context.TexCoord2iv)
#define glTexCoord2s (glad_gl_context.TexCoord2s)
#define glTexCoord2sv (glad_gl_context.TexCoord2sv)
#define glTexCoord3d (glad_gl_context.TexCoord3d)
#define glTexCoord3dv (glad_gl_context.TexCoord3dv)
#define glTexCoord3f (glad_gl_context.TexCoord3f)
#define glTexCoord3fv (glad_gl_context.TexCoord3fv)
#define glTexCoord3i (glad_gl_context.TexCoord3i)
#define glTexCoord3iv (glad_gl_context.TexCoord3iv)
#define glTexCoord3s (glad_gl_context.TexCoord3s)
#define glTexCoord3sv (glad_gl_context.TexCoord3sv)
#define glTexCoord4d (glad_gl_context.TexCoord4d)
#define glTexCoord4dv (glad_gl_context.TexCoord4dv)
#define glTexCoord4f (glad_gl_context.TexCoord4f)
#define glTexCoord4fv (glad_gl_context.TexCoord4fv)
#define glTexCoord4i (glad_gl_context.TexCoord4i)
#define glTexCoord4iv (glad_gl_context.TexCoord4iv)
#define glTexCoord4s (glad_gl_context.TexCoord4s)
#define glTexCoord4sv (glad_gl_context.TexCoord4sv)
#define glTexCoordP1ui (glad_gl_context.TexCoordP1ui)
#define glTexCoordP1uiv (glad_gl_context.TexCoordP1uiv)
#define glTexCoordP2ui (glad_gl_context.TexCoordP2ui)
#define glTexCoordP2uiv (glad_gl_context.TexCoordP2uiv)
#define glTexCoordP3ui (glad_gl_context.TexCoordP3ui)
#define glTexCoordP3uiv (glad_gl_context.TexCoordP3uiv)
#define glTexCoordP4ui (glad_gl_context.TexCoordP4ui)
#define glTexCoordP4uiv (glad_gl_context.TexCoordP4uiv)
#define glTexCoordPointer (glad_gl_context.TexCoordPointer)
#define glTexEnvf (glad_gl_context.TexEnvf)
#define glTexEnvfv (glad_gl_context.TexEnvfv)
#define glTexEnvi (glad_gl_context.TexEnvi)
#define glTexEnviv (glad_gl_context.TexEnviv)
#define glTexGend (glad_gl_context.TexGend)
#define glTexGendv (glad_gl_context.TexGendv)
#define glTexGenf (glad_gl_context.TexGenf)
#define glTexGenfv (glad_gl_context.TexGenfv)
#define glTexGeni (glad_gl_context.TexGeni)
#define glTexGeniv (glad_gl_context.TexGeniv)
#define glTexImage1D (glad_gl_context.TexImage1D)
#define glTexImage2D (glad_gl_context.TexImage2D)
#define glTexImage2DMultisample (glad_gl_context.TexImage2DMultisample)
#define glTexImage3D (glad_gl_context.TexImage3D)
#define glTexImage3DMultisample (glad_gl_context.TexImage3DMultisample)
#define glTexParameterIiv (glad_gl_context.TexParameterIiv)
#define glTexParameterIuiv (glad_gl_context.TexParameterIuiv)
#define glTexSubImage1D (glad_gl_context.TexSubImage1D)
#define glTexSubImage3D (glad_gl_context.TexSubImage3D)
#define glTransformFeedbackVaryings (glad_gl_context.TransformFeedbackVaryings)
#define glTranslated (glad_gl_context.Translated)
#define glTranslatef (glad_gl_context.Translatef)
#define glUniform1ui (glad_gl_context.Uniform1ui)
#define glUniform1uiv (glad_gl_context.Uniform1uiv)
#define glUniform2ui (glad_gl_context.Uniform2ui)
#define glUniform2uiv (glad_gl_context.Uniform2uiv)
#define glUniform3ui (glad_gl_context.Uniform3ui)
#define glUniform3uiv (glad_gl_context.Uniform3uiv)
#define glUniform4ui (glad_gl_context.Uniform4ui)
#define glUniform4uiv (glad_gl_context.Uniform4uiv)
#define glUniformBlockBinding (glad_gl_context.UniformBlockBinding)
#define glUniformMatrix2x3fv (glad_gl_context.UniformMatrix2x3fv)
#define glUniformMatrix2x4fv (glad_gl_context.UniformMatrix2x4fv)
#define glUniformMatrix3x2fv (glad_gl_context.UniformMatrix3x2fv)
#define glUniformMatrix3x4fv (glad_gl_context.UniformMatrix3x4fv)
#define glUniformMatrix4x2fv (glad_gl_context.UniformMatrix4x2fv)
#define glUniformMatrix4x3fv (glad_gl_context.UniformMatrix4x3fv)
#define glUnmapBuffer (glad_gl_context.UnmapBuffer)
#define glValidateProgram (glad_gl_context.ValidateProgram)
#define glVertex2d (glad_gl_context.Vertex2d)
#define glVertex2dv (glad_gl_context.Vertex2dv)
#define glVertex2f (glad_gl_context.Vertex2f)
#define glVertex2fv (glad_gl_context.Vertex2fv)
#define glVertex2i (glad_gl_context.Vertex2i)
#define glVertex2iv (glad_gl_context.Vertex2iv)
#define glVertex2s (glad_gl_context.Vertex2s)
#define glVertex2sv (glad_gl_context.Vertex2sv)
#define glVertex3d (glad_gl_context.Vertex3d)
#define glVertex3dv (glad_gl_context.Vertex3dv)
#define glVertex3f (glad_gl_context.Vertex3f)
#define glVertex3fv (glad_gl_context.Vertex3fv)
#define glVertex3i (glad_gl_context.Vertex3i)
#define glVertex3iv (glad_gl_context.Vertex3iv)
#define glVertex3s (glad_gl_context.Vertex3s)
#define glVertex3sv (glad_gl_context.Vertex3sv)
#define glVertex4d (glad_gl_context.Vertex4d)
#define glVertex4dv (glad_gl_context.Vertex4dv)
#define glVertex4f (glad_gl_context.Vertex4f)
#define glVertex4fv (glad_gl_context.Vertex4fv)
#define glVertex4i (glad_gl_context.Vertex4i)
#define glVertex4iv (glad_gl_context.Vertex4iv)
#define glVertex4s (glad_gl_context.Vertex4s)
#define glVertex4sv (glad_gl_context.Vertex4sv)
#define glVertexAttrib1d (glad_gl_context.VertexAttrib1d)
#define glVertexAttrib1dv (glad_gl_context.VertexAttrib1dv)
#define glVertexAttrib1s (glad_gl_context.VertexAttrib1s)
#define glVertexAttrib1sv (glad_gl_context.VertexAttrib1sv)
#define glVertexAttrib2d (glad_gl_context.VertexAttrib2d)
#define glVertexAttrib2dv (glad_gl_context.VertexAttrib2dv)
#define glVertexAttrib2s (glad_gl_context.VertexAttrib2s)
#define glVertexAttrib2sv (glad_gl_context.VertexAttrib2sv)
#define glVertexAttrib3d (glad_gl_context.VertexAttrib3d)
#define glVertexAttrib3dv (glad_gl_context.VertexAttrib3dv)
#define glVertexAttrib3s (glad_gl_context.VertexAttrib3s)
#define glVertexAttrib3sv (glad_gl_context.VertexAttrib3sv)
#define glVertexAttrib4Nbv (glad_gl_context.VertexAttrib4Nbv)
#define glVertexAttrib4Niv (glad_gl_context.VertexAttrib4Niv)
#define glVertexAttrib4Nsv (glad_gl_context.VertexAttrib4Nsv)
#define glVertexAttrib4Nub (glad_gl_context.VertexAttrib4Nub)
#define glVertexAttrib4Nubv (glad_gl_context.VertexAttrib4Nubv)
#define glVertexAttrib4Nuiv (glad_gl_context.VertexAttrib4Nuiv)
#define glVertexAttrib4Nusv (glad_gl_context.VertexAttrib4Nusv)
#define glVertexAttrib4bv (glad_gl_context.VertexAttrib4bv)
#define glVertexAttrib4d (glad_gl_context.VertexAttrib4d)
#define glVertexAttrib4dv (glad_gl_context.VertexAttrib4dv)
#define glVertexAttrib4iv (glad_gl_context.VertexAttrib4iv)
#define glVertexAttrib4s (glad_gl_context.VertexAttrib4s)
#define glVertexAttrib4sv (glad_gl_context.VertexAttrib4sv)
#define glVertexAttrib4ubv (glad_gl_context.VertexAttrib4ubv)
#define glVertexAttrib4uiv (glad_gl_context.VertexAttrib4uiv)
#define glVertexAttrib4usv (glad_gl_context.VertexAttrib4usv)
#define glVertexAttribDivisor (glad_gl_context.VertexAttribDivisor)
#define glVertexAttribI1i (glad_gl_context.VertexAttribI1i)
#define glVertexAttribI1iv (glad_gl_context.VertexAttribI1iv)
#define glVertexAttribI1ui (glad_gl_context.VertexAttribI1ui)
#define glVertexAttribI1uiv (glad_gl_context.VertexAttribI1uiv)
#define glVertexAttribI2i (glad_gl_context.VertexAttribI2i)
#define glVertexAttribI2iv (glad_gl_context.VertexAttribI2iv)
#define glVertexAttribI2ui (glad_gl_context.VertexAttribI2ui)
#define glVertexAttribI2uiv (glad_gl_context.VertexAttribI2uiv)
#define glVertexAttribI3i (glad_gl_context.VertexAttribI3i)
#define glVertexAttribI3iv (glad_gl_context.VertexAttribI3iv)
#define glVertexAttribI3ui (glad_gl_context.VertexAttribI3ui)
#define glVertexAttribI3uiv (glad_gl_context.VertexAttribI3uiv)
#define glVertexAttribI4bv (glad_gl_context.VertexAttribI4bv)
#define glVertexAttribI4i (glad_gl_context.VertexAttribI4i)
#define glVertexAttribI4iv (glad_gl_context.VertexAttribI4iv)
#define glVertexAttribI4sv (glad_gl_context.VertexAttribI4sv)
#define glVertexAttribI4ubv (glad_gl_context.VertexAttribI4ubv)
#define glVertexAttribI4ui (glad_gl_context.VertexAttribI4ui)
#define glVertexAttribI4uiv (glad_gl_context.VertexAttribI4uiv)
#define glVertexAttribI4usv (glad_gl_context.VertexAttribI4usv)
#define glVertexAttribIPointer (glad_gl_context.VertexAttribIPointer)
#define glVertexAttribP1ui (glad_gl_context.VertexAttribP1ui)
#define glVertexAttribP1uiv (glad_gl_context.VertexAttribP1uiv)
#define glVertexAttribP2ui (glad_gl_context.VertexAttribP2ui)
#define glVertexAttribP2uiv (glad_gl_context.VertexAttribP2uiv)
#define glVertexAttribP3ui (glad_gl_context.VertexAttribP3ui)
#define glVertexAttribP3uiv (glad_gl_context.VertexAttribP3uiv)
#define glVertexAttribP4ui (glad_gl_context.VertexAttribP4ui)
#define glVertexAttribP4uiv (glad_gl_context.VertexAttribP4uiv)
#define glVertexP2ui (glad_gl_context.VertexP2ui)
#define glVertexP2uiv (glad_gl_context.VertexP2uiv)
#define glVertexP3ui (glad_gl_context.VertexP3ui)
#define glVertexP3uiv (glad_gl_context.VertexP3uiv)
#define glVertexP4ui (glad_gl_context.VertexP4ui)
#define glVertexP4uiv (glad_gl_context.VertexP4uiv)
#define glVertexPointer (glad_gl_context.VertexPointer)
#define glWaitSync (glad_gl_context.WaitSync)
#define glWindowPos2d (glad_gl_context.WindowPos2d)
#define glWindowPos2dv (glad_gl_context.WindowPos2dv)
#define glWindowPos2f (glad_gl_context.WindowPos2f)
#define glWindowPos2fv (glad_gl_context.WindowPos2fv)
#define glWindowPos2i (glad_gl_context.WindowPos2i)
#define glWindowPos2iv (glad_gl_context.WindowPos2iv)
#define glWindowPos2s (glad_gl_context.WindowPos2s)
#define glWindowPos2sv (glad_gl_context.WindowPos2sv)
#define glWindowPos3d (glad_gl_context.WindowPos3d)
#define glWindowPos3dv (glad_gl_context.WindowPos3dv)
#define glWindowPos3f (glad_gl_context.WindowPos3f)
#define glWindowPos3fv (glad_gl_context.WindowPos3fv)
#define glWindowPos3i (glad_gl_context.WindowPos3i)
#define glWindowPos3iv (glad_gl_context.WindowPos3iv)
#define glWindowPos3s (glad_gl_context.WindowPos3s)
#define glWindowPos3sv (glad_gl_context.WindowPos3sv)
#define glActiveShaderProgram (glad_gl_context.ActiveShaderProgram)
#define glBindImageTexture (glad_gl_context.BindImageTexture)
#define glBindProgramPipeline (glad_gl_context.BindProgramPipeline)
#define glBindTransformFeedback (glad_gl_context.BindTransformFeedback)
#define glBindVertexBuffer (glad_gl_context.BindVertexBuffer)
#define glBlendBarrier (glad_gl_context.BlendBarrier)
#define glBlendEquationSeparatei (glad_gl_context.BlendEquationSeparatei)
#define glBlendEquationi (glad_gl_context.BlendEquationi)
#define glBlendFuncSeparatei (glad_gl_context.BlendFuncSeparatei)
#define glBlendFunci (glad_gl_context.BlendFunci)
#define glCopyImageSubData (glad_gl_context.CopyImageSubData)
#define glCreateShaderProgramv (glad_gl_context.CreateShaderProgramv)
#define glDebugMessageCallback (glad_gl_context.DebugMessageCallback)
#define glDebugMessageControl (glad_gl_context.DebugMessageControl)
#define glDebugMessageInsert (glad_gl_context.DebugMessageInsert)
#define glDeleteProgramPipelines (glad_gl_context.DeleteProgramPipelines)
#define glDeleteTransformFeedbacks (glad_gl_context.DeleteTransformFeedbacks)
#define glDispatchCompute (glad_gl_context.DispatchCompute)
#define glDispatchComputeIndirect (glad_gl_context.DispatchComputeIndirect)
#define glDrawArraysIndirect (glad_gl_context.DrawArraysIndirect)
#define glDrawElementsIndirect (glad_gl_context.DrawElementsIndirect)
#define glFramebufferParameteri (glad_gl_context.FramebufferParameteri)
#define glGenProgramPipelines (glad_gl_context.GenProgramPipelines)
#define glGenTransformFeedbacks (glad_gl_context.GenTransformFeedbacks)
#define glGetDebugMessageLog (glad_gl_context.GetDebugMessageLog)
#define glGetFramebufferParameteriv (glad_gl_context.GetFramebufferParameteriv)
#define glGetInternalformativ (glad_gl_context.GetInternalformativ)
#define glGetObjectLabel (glad_gl_context.GetObjectLabel)
#define glGetObjectPtrLabel (glad_gl_context.GetObjectPtrLabel)
#define glGetProgramBinary (glad_gl_context.GetProgramBinary)
#define glGetProgramInterfaceiv (glad_gl_context.GetProgramInterfaceiv)
#define glGetProgramPipelineInfoLog (glad_gl_context.GetProgramPipelineInfoLog)
#define glGetProgramPipelineiv (glad_gl_context.GetProgramPipelineiv)
#define glGetProgramResourceIndex (glad_gl_context.GetProgramResourceIndex)
#define glGetProgramResourceLocation (glad_gl_context.GetProgramResourceLocation)
#define glGetProgramResourceName (glad_gl_context.GetProgramResourceName)
#define glGetProgramResourceiv (glad_gl_context.GetProgramResourceiv)
#define glGetShaderPrecisionFormat (glad_gl_context.GetShaderPrecisionFormat)
#define glGetnUniformuiv (glad_gl_context.GetnUniformuiv)
#define glInvalidateFramebuffer (glad_gl_context.InvalidateFramebuffer)
#define glInvalidateSubFramebuffer (glad_gl_context.InvalidateSubFramebuffer)
#define glIsProgramPipeline (glad_gl_context.IsProgramPipeline)
#define glIsTransformFeedback (glad_gl_context.IsTransformFeedback)
#define glMemoryBarrier (glad_gl_context.MemoryBarrier)
#define glMemoryBarrierByRegion (glad_gl_context.MemoryBarrierByRegion)
#define glMinSampleShading (glad_gl_context.MinSampleShading)
#define glObjectLabel (glad_gl_context.ObjectLabel)
#define glObjectPtrLabel (glad_gl_context.ObjectPtrLabel)
#define glPatchParameteri (glad_gl_context.PatchParameteri)
#define glPauseTransformFeedback (glad_gl_context.PauseTransformFeedback)
#define glPopDebugGroup (glad_gl_context.PopDebugGroup)
#define glPrimitiveBoundingBox (glad_gl_context.PrimitiveBoundingBox)
#define glProgramParameteri (glad_gl_context.ProgramParameteri)
#define glProgramUniform1f (glad_gl_context.ProgramUniform1f)
#define glProgramUniform1fv (glad_gl_context.ProgramUniform1fv)
#define glProgramUniform1i (glad_gl_context.ProgramUniform1i)
#define glProgramUniform1iv (glad_gl_context.ProgramUniform1iv)
#define glProgramUniform1ui (glad_gl_context.ProgramUniform1ui)
#define glProgramUniform1uiv (glad_gl_context.ProgramUniform1uiv)
#define glProgramUniform2f (glad_gl_context.ProgramUniform2f)
#define glProgramUniform2fv (glad_gl_context.ProgramUniform2fv)
#define glProgramUniform2i (glad_gl_context.ProgramUniform2i)
#define glProgramUniform2iv (glad_gl_context.ProgramUniform2iv)
#define glProgramUniform2ui (glad_gl_context.ProgramUniform2ui)
#define glProgramUniform2uiv (glad_gl_context.ProgramUniform2uiv)
#define glProgramUniform3f (glad_gl_context.ProgramUniform3f)
#define glProgramUniform3fv (glad_gl_context.ProgramUniform3fv)
#define glProgramUniform3i (glad_gl_context.ProgramUniform3i)
#define glProgramUniform3iv (glad_gl_context.ProgramUniform3iv)
#define glProgramUniform3ui (glad_gl_context.ProgramUniform3ui)
#define glProgramUniform3uiv (glad_gl_context.ProgramUniform3uiv)
#define glProgramUniform4f (glad_gl_context.ProgramUniform4f)
#define glProgramUniform4fv (glad_gl_context.ProgramUniform4fv)
#define glProgramUniform4i (glad_gl_context.ProgramUniform4i)
#define glProgramUniform4iv (glad_gl_context.ProgramUniform4iv)
#define glProgramUniform4ui (glad_gl_context.ProgramUniform4ui)
#define glProgramUniform4uiv (glad_gl_context.ProgramUniform4uiv)
#define glProgramUniformMatrix2fv (glad_gl_context.ProgramUniformMatrix2fv)
#define glProgramUniformMatrix2x3fv (glad_gl_context.ProgramUniformMatrix2x3fv)
#define glProgramUniformMatrix2x4fv (glad_gl_context.ProgramUniformMatrix2x4fv)
#define glProgramUniformMatrix3fv (glad_gl_context.ProgramUniformMatrix3fv)
#define glProgramUniformMatrix3x2fv (glad_gl_context.ProgramUniformMatrix3x2fv)
#define glProgramUniformMatrix3x4fv (glad_gl_context.ProgramUniformMatrix3x4fv)
#define glProgramUniformMatrix4fv (glad_gl_context.ProgramUniformMatrix4fv)
#define glProgramUniformMatrix4x2fv (glad_gl_context.ProgramUniformMatrix4x2fv)
#define glProgramUniformMatrix4x3fv (glad_gl_context.ProgramUniformMatrix4x3fv)
#define glPushDebugGroup (glad_gl_context.PushDebugGroup)
#define glReleaseShaderCompiler (glad_gl_context.ReleaseShaderCompiler)
#define glResumeTransformFeedback (glad_gl_context.ResumeTransformFeedback)
#define glShaderBinary (glad_gl_context.ShaderBinary)
#define glTexBufferRange (glad_gl_context.TexBufferRange)
#define glTexStorage2DMultisample (glad_gl_context.TexStorage2DMultisample)
#define glTexStorage3D (glad_gl_context.TexStorage3D)
#define glTexStorage3DMultisample (glad_gl_context.TexStorage3DMultisample)
#define glUseProgramStages (glad_gl_context.UseProgramStages)
#define glValidateProgramPipeline (glad_gl_context.ValidateProgramPipeline)
#define glVertexAttribBinding (glad_gl_context.VertexAttribBinding)
#define glVertexAttribFormat (glad_gl_context.VertexAttribFormat)
#define glVertexAttribIFormat (glad_gl_context.VertexAttribIFormat)
#define glVertexBindingDivisor (glad_gl_context.VertexBindingDivisor)
#define glAlphaFuncx (glad_gl_context.AlphaFuncx)
#define glClearColorx (glad_gl_context.ClearColorx)
#define glClearDepthx (glad_gl_context.ClearDepthx)
#define glClipPlanef (glad_gl_context.ClipPlanef)
#define glClipPlanex (glad_gl_context.ClipPlanex)
#define glColor4x (glad_gl_context.Color4x)
#define glDepthRangex (glad_gl_context.DepthRangex)
#define glFogx (glad_gl_context.Fogx)
#define glFogxv (glad_gl_context.Fogxv)
#define glFrustumf (glad_gl_context.Frustumf)
#define glFrustumx (glad_gl_context.Frustumx)
#define glGetClipPlanef (glad_gl_context.GetClipPlanef)
#define glGetClipPlanex (glad_gl_context.GetClipPlanex)
#define glGetFixedv (glad_gl_context.GetFixedv)
#define glGetLightxv (glad_gl_context.GetLightxv)
#define glGetMaterialxv (glad_gl_context.GetMaterialxv)
#define glGetTexEnvxv (glad_gl_context.GetTexEnvxv)
#define glGetTexParameterxv (glad_gl_context.GetTexParameterxv)
#define glLightModelx (glad_gl_context.LightModelx)
#define glLightModelxv (glad_gl_context.LightModelxv)
#define glLightx (glad_gl_context.Lightx)
#define glLightxv (glad_gl_context.Lightxv)
#define glLineWidthx (glad_gl_context.LineWidthx)
#define glLoadMatrixx (glad_gl_context.LoadMatrixx)
#define glMaterialx (glad_gl_context.Materialx)
#define glMaterialxv (glad_gl_context.Materialxv)
#define glMultMatrixx (glad_gl_context.MultMatrixx)
#define glMultiTexCoord4x (glad_gl_context.MultiTexCoord4x)
#define glNormal3x (glad_gl_context.Normal3x)
#define glOrthof (glad_gl_context.Orthof)
#define glOrthox (glad_gl_context.Orthox)
#define glPointParameterx (glad_gl_context.PointParameterx)
#define glPointParameterxv (glad_gl_context.PointParameterxv)
#define glPointSizex (glad_gl_context.PointSizex)
#define glPolygonOffsetx (glad_gl_context.PolygonOffsetx)
#define glRotatex (glad_gl_context.Rotatex)
#define glSampleCoveragex (glad_gl_context.SampleCoveragex)
#define glScalex (glad_gl_context.Scalex)
#define glTexEnvx (glad_gl_context.TexEnvx)
#define glTexEnvxv (glad_gl_context.TexEnvxv)
#define glTexParameterx (glad_gl_context.TexParameterx)
#define glTexParameterxv (glad_gl_context.TexParameterxv)
#define glTranslatex (glad_gl_context.Translatex)



GladGLContext* gladGetGLContext(void);
GLAD_API_CALL void gladSetGLContext(GladGLContext *context);


GLAD_API_CALL int gladLoadGLSC2ContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLSC2Context(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLSC2UserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLSC2(GLADloadfunc load);
GLAD_API_CALL int gladLoadGLContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLContext(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLUserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGL(GLADloadfunc load);
GLAD_API_CALL int gladLoadGLES2ContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2Context(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLES2UserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2(GLADloadfunc load);
GLAD_API_CALL int gladLoadGLES1ContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES1Context(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLES1UserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES1(GLADloadfunc load);

#ifdef GLAD_GL

GLAD_API_CALL int gladLoaderLoadGLContext(GladGLContext *context);
GLAD_API_CALL int gladLoaderLoadGL(void);
GLAD_API_CALL void gladLoaderUnloadGL(void);

#endif
#ifdef GLAD_GLES2

GLAD_API_CALL int gladLoaderLoadGLES2Context(GladGLContext *context);
GLAD_API_CALL int gladLoaderLoadGLES2(void);
GLAD_API_CALL void gladLoaderUnloadGLES2(void);

#endif /* GLAD_GLES2 */

#ifdef GLAD_GLES1

GLAD_API_CALL int gladLoaderLoadGLES1Context(GladGLContext *context);
GLAD_API_CALL int gladLoaderLoadGLES1(void);
GLAD_API_CALL void gladLoaderUnloadGLES1(void);

#endif /* GLAD_GLES1 */

#ifdef __cplusplus
}
#endif
#endif
